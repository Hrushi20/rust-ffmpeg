use avcodec_wasmedge;
use codec::id::AVCodecID::*;
use util::media;

#[allow(non_camel_case_types)]
#[derive(Eq, PartialEq, Clone, Copy, Debug)]
pub enum Id {
    None,

    // video codecs
    MPEG1VIDEO,
    MPEG2VIDEO,
    #[cfg(all(feature = "ff_api_xvmc", not(feature = "ffmpeg_5_0")))]
    MPEG2VIDEO_XVMC,
    H261,
    H263,
    RV10,
    RV20,
    MJPEG,
    MJPEGB,
    LJPEG,
    SP5X,
    JPEGLS,
    MPEG4,
    RAWVIDEO,
    MSMPEG4V1,
    MSMPEG4V2,
    MSMPEG4V3,
    WMV1,
    WMV2,
    H263P,
    H263I,
    FLV1,
    SVQ1,
    SVQ3,
    DVVIDEO,
    HUFFYUV,
    CYUV,
    H264,
    INDEO3,
    VP3,
    THEORA,
    ASV1,
    ASV2,
    FFV1,
    XM4,
    VCR1,
    CLJR,
    MDEC,
    ROQ,
    INTERPLAY_VIDEO,
    XAN_WC3,
    XAN_WC4,
    RPZA,
    CINEPAK,
    WS_VQA,
    MSRLE,
    MSVIDEO1,
    IDCIN,
    BPS8,
    SMC,
    FLIC,
    TRUEMOTION1,
    VMDVIDEO,
    MSZH,
    ZLIB,
    QTRLE,
    TSCC,
    ULTI,
    QDRAW,
    VIXL,
    QPEG,
    PNG,
    PPM,
    PBM,
    PGM,
    PGMYUV,
    PAM,
    FFVHUFF,
    RV30,
    RV40,
    VC1,
    WMV3,
    LOCO,
    WNV1,
    AASC,
    INDEO2,
    FRAPS,
    TRUEMOTION2,
    BMP,
    CSCD,
    MMVIDEO,
    ZMBV,
    AVS,
    SMACKVIDEO,
    NUV,
    KMVC,
    FLASHSV,
    CAVS,
    JPEG2000,
    VMNC,
    VP5,
    VP6,
    VP6F,
    TARGA,
    DSICINVIDEO,
    TIERTEXSEQVIDEO,
    TIFF,
    GIF,
    DXA,
    DNXHD,
    THP,
    SGI,
    C93,
    BETHSOFTVID,
    PTX,
    TXD,
    VP6A,
    AMV,
    VB,
    PCX,
    SUNRAST,
    INDEO4,
    INDEO5,
    MIMIC,
    RL2,
    ESCAPE124,
    DIRAC,
    BFI,
    CMV,
    MOTIONPIXELS,
    TGV,
    TGQ,
    TQI,
    AURA,
    AURA2,
    V210X,
    TMV,
    V210,
    DPX,
    MAD,
    FRWU,
    FLASHSV2,
    CDGRAPHICS,
    R210,
    ANM,
    BINKVIDEO,
    IFF_ILBM,
    IFF_BYTERUN1,
    KGV1,
    YOP,
    VP8,
    PICTOR,
    ANSI,
    A64_MULTI,
    A64_MULTI5,
    R10K,
    MXPEG,
    LAGARITH,
    PRORES,
    JV,
    DFA,
    WMV3IMAGE,
    VC1IMAGE,
    UTVIDEO,
    BMV_VIDEO,
    VBLE,
    DXTORY,
    V410,
    XWD,
    CDXL,
    XBM,
    ZEROCODEC,
    MSS1,
    MSA1,
    TSCC2,
    MTS2,
    CLLC,
    MSS2,
    VP9,
    AIC,
    ESCAPE130,
    G2M,
    WEBP,
    HNM4_VIDEO,
    HEVC,
    H265,
    FIC,
    ALIAS_PIX,
    BRENDER_PIX,
    PAF_VIDEO,
    EXR,
    VP7,
    SANM,
    SGIRLE,
    MVC1,
    MVC2,
    HQX,
    TDSC,
    HQ_HQA,
    HAP,
    DDS,
    DXV,
    SCREENPRESSO,
    RSCC,

    Y41P,
    AVRP,
    V012,
    AVUI,
    AYUV,
    TARGA_Y216,
    V308,
    V408,
    YUV4,
    AVRN,
    CPIA,
    XFACE,
    SNOW,
    SMVJPEG,
    APNG,
    DAALA,
    CFHD,
    TRUEMOTION2RT,
    M101,
    MAGICYUV,
    SHEERVIDEO,
    YLC,

    // various PCM "codecs"
    PCM_S16LE,
    PCM_S16BE,
    PCM_U16LE,
    PCM_U16BE,
    PCM_S8,
    PCM_U8,
    PCM_MULAW,
    PCM_ALAW,
    PCM_S32LE,
    PCM_S32BE,
    PCM_U32LE,
    PCM_U32BE,
    PCM_S24LE,
    PCM_S24BE,
    PCM_U24LE,
    PCM_U24BE,
    PCM_S24DAUD,
    PCM_ZORK,
    PCM_S16LE_PLANAR,
    PCM_DVD,
    PCM_F32BE,
    PCM_F32LE,
    PCM_F64BE,
    PCM_F64LE,
    PCM_BLURAY,
    PCM_LXF,
    S302M,
    PCM_S8_PLANAR,
    PCM_S24LE_PLANAR,
    PCM_S32LE_PLANAR,
    PCM_S16BE_PLANAR,

    PCM_S64LE,
    PCM_S64BE,

    // various ADPCM codecs
    ADPCM_IMA_QT,
    ADPCM_IMA_WAV,
    ADPCM_IMA_DK3,
    ADPCM_IMA_DK4,
    ADPCM_IMA_WS,
    ADPCM_IMA_SMJPEG,
    ADPCM_MS,
    ADPCM_4XM,
    ADPCM_XA,
    ADPCM_ADX,
    ADPCM_EA,
    ADPCM_G726,
    ADPCM_CT,
    ADPCM_SWF,
    ADPCM_YAMAHA,
    ADPCM_SBPRO_4,
    ADPCM_SBPRO_3,
    ADPCM_SBPRO_2,
    ADPCM_THP,
    ADPCM_IMA_AMV,
    ADPCM_EA_R1,
    ADPCM_EA_R3,
    ADPCM_EA_R2,
    ADPCM_IMA_EA_SEAD,
    ADPCM_IMA_EA_EACS,
    ADPCM_EA_XAS,
    ADPCM_EA_MAXIS_XA,
    ADPCM_IMA_ISS,
    ADPCM_G722,
    ADPCM_IMA_APC,
    ADPCM_VIMA,

    ADPCM_AFC,
    ADPCM_IMA_OKI,
    ADPCM_DTK,
    ADPCM_IMA_RAD,
    ADPCM_G726LE,
    ADPCM_THP_LE,
    ADPCM_PSX,
    ADPCM_AICA,
    ADPCM_IMA_DAT4,
    ADPCM_MTAF,

    // AMR
    AMR_NB,
    AMR_WB,

    // RealAudio codecs
    RA_144,
    RA_288,

    // various DPCM codecs
    ROQ_DPCM,
    INTERPLAY_DPCM,
    XAN_DPCM,
    SOL_DPCM,

    SDX2_DPCM,

    // audio codecs
    MP2,
    MP3,
    AAC,
    AC3,
    DTS,
    VORBIS,
    DVAUDIO,
    WMAV1,
    WMAV2,
    MACE3,
    MACE6,
    VMDAUDIO,
    FLAC,
    MP3ADU,
    MP3ON4,
    SHORTEN,
    ALAC,
    WESTWOOD_SND1,
    GSM,
    QDM2,
    COOK,
    TRUESPEECH,
    TTA,
    SMACKAUDIO,
    QCELP,
    WAVPACK,
    DSICINAUDIO,
    IMC,
    MUSEPACK7,
    MLP,
    GSM_MS,
    ATRAC3,
    #[cfg(feature = "ff_api_voxware")]
    VOXWARE,
    APE,
    NELLYMOSER,
    MUSEPACK8,
    SPEEX,
    WMAVOICE,
    WMAPRO,
    WMALOSSLESS,
    ATRAC3P,
    EAC3,
    SIPR,
    MP1,
    TWINVQ,
    TRUEHD,
    MP4ALS,
    ATRAC1,
    BINKAUDIO_RDFT,
    BINKAUDIO_DCT,
    AAC_LATM,
    QDMC,
    CELT,
    G723_1,
    G729,
    SVX_EXP8,
    SVX_FIB8,
    BMV_AUDIO,
    RALF,
    IAC,
    ILBC,
    OPUS,
    COMFORT_NOISE,
    TAK,
    METASOUND,
    PAF_AUDIO,
    ON2AVC,
    DSS_SP,

    #[cfg(feature = "ffmpeg_4_0")]
    CODEC2,
    FFWAVESYNTH,
    SONIC,
    SONIC_LS,
    EVRC,
    SMV,
    DSD_LSBF,
    DSD_MSBF,
    DSD_LSBF_PLANAR,
    DSD_MSBF_PLANAR,
    _4GV,
    INTERPLAY_ACM,
    XMA1,
    XMA2,
    DST,

    // subtitle codecs
    DVD_SUBTITLE,
    DVB_SUBTITLE,
    TEXT,
    XSUB,
    SSA,
    MOV_TEXT,
    HDMV_PGS_SUBTITLE,
    DVB_TELETEXT,
    SRT,

    MICRODVD,
    EIA_608,
    JACOSUB,
    SAMI,
    REALTEXT,
    STL,
    SUBVIEWER1,
    SUBVIEWER,
    SUBRIP,
    WEBVTT,
    MPL2,
    VPLAYER,
    PJS,
    ASS,
    HDMV_TEXT_SUBTITLE,

    // other specific kind of codecs (generally used for attachments)
    TTF,

    SCTE_35,
    BINTEXT,
    XBIN,
    IDF,
    OTF,
    SMPTE_KLV,
    DVD_NAV,
    TIMED_ID3,
    BIN_DATA,

    PROBE,

    MPEG2TS,
    MPEG4SYSTEMS,
    FFMETADATA,
    WRAPPED_AVFRAME,

    PSD,
    PIXLET,
    SPEEDHQ,
    CLEARVIDEO,
    FMVC,
    SCPR,
    XPM,
    AV1,
    PCM_F16LE,
    PCM_F24LE,
    ATRAC3AL,
    ATRAC3PAL,

    BITPACKED,
    MSCC,
    SRGC,
    SVG,
    GDV,
    FITS,
    GREMLIN_DPCM,
    DOLBY_E,

    #[cfg(feature = "ffmpeg_4_0")]
    APTX,
    #[cfg(feature = "ffmpeg_4_0")]
    APTX_HD,
    #[cfg(feature = "ffmpeg_4_0")]
    SBC,

    #[cfg(feature = "ffmpeg_4_1")]
    AVS2,
    #[cfg(feature = "ffmpeg_4_1")]
    IMM4,
    #[cfg(feature = "ffmpeg_4_1")]
    PROSUMER,
    #[cfg(feature = "ffmpeg_4_1")]
    MWSC,
    #[cfg(feature = "ffmpeg_4_1")]
    WCMV,
    #[cfg(feature = "ffmpeg_4_1")]
    RASC,
    #[cfg(feature = "ffmpeg_4_1")]
    PCM_VIDC,
    #[cfg(feature = "ffmpeg_4_1")]
    ATRAC9,
    #[cfg(feature = "ffmpeg_4_1")]
    TTML,

    #[cfg(feature = "ffmpeg_4_2")]
    HYMT,
    #[cfg(feature = "ffmpeg_4_2")]
    ARBC,
    #[cfg(feature = "ffmpeg_4_2")]
    AGM,
    #[cfg(feature = "ffmpeg_4_2")]
    LSCR,
    #[cfg(feature = "ffmpeg_4_2")]
    VP4,
    #[cfg(feature = "ffmpeg_4_2")]
    ADPCM_AGM,
    #[cfg(feature = "ffmpeg_4_2")]
    HCOM,
    #[cfg(feature = "ffmpeg_4_2")]
    ARIB_CAPTION,

    #[cfg(feature = "ffmpeg_4_3")]
    IMM5,
    #[cfg(feature = "ffmpeg_4_3")]
    MVDV,
    #[cfg(feature = "ffmpeg_4_3")]
    MVHA,
    #[cfg(feature = "ffmpeg_4_3")]
    CDTOONS,
    #[cfg(feature = "ffmpeg_4_3")]
    MV30,
    #[cfg(feature = "ffmpeg_4_3")]
    NOTCHLC,
    #[cfg(feature = "ffmpeg_4_3")]
    PFM,
    #[cfg(feature = "ffmpeg_4_3")]
    ADPCM_ARGO,
    #[cfg(feature = "ffmpeg_4_3")]
    ADPCM_IMA_SSI,
    #[cfg(feature = "ffmpeg_4_3")]
    ADPCM_ZORK,
    #[cfg(feature = "ffmpeg_4_3")]
    ADPCM_IMA_APM,
    #[cfg(feature = "ffmpeg_4_3")]
    ADPCM_IMA_ALP,
    #[cfg(feature = "ffmpeg_4_3")]
    ADPCM_IMA_MTF,
    #[cfg(feature = "ffmpeg_4_3")]
    ADPCM_IMA_CUNNING,
    #[cfg(feature = "ffmpeg_4_3")]
    DERF_DPCM,
    #[cfg(feature = "ffmpeg_4_3")]
    ACELP_KELVIN,
    #[cfg(feature = "ffmpeg_4_3")]
    MPEGH_3D_AUDIO,
    #[cfg(feature = "ffmpeg_4_3")]
    SIREN,
    #[cfg(feature = "ffmpeg_4_3")]
    HCA,
    #[cfg(feature = "ffmpeg_4_3")]
    EPG,

    #[cfg(feature = "ffmpeg_4_4")]
    AVS3,
    #[cfg(feature = "ffmpeg_4_4")]
    PGX,
    #[cfg(feature = "ffmpeg_4_4")]
    MSP2,
    #[cfg(feature = "ffmpeg_4_4")]
    VVC,
    #[cfg(feature = "ffmpeg_4_4")]
    MOBICLIP,
    #[cfg(feature = "ffmpeg_4_4")]
    PHOTOCD,
    #[cfg(feature = "ffmpeg_4_4")]
    ARGO,
    #[cfg(feature = "ffmpeg_4_4")]
    CRI,
    #[cfg(feature = "ffmpeg_4_4")]
    IPU,
    #[cfg(feature = "ffmpeg_4_4")]
    SIMBIOSIS_IMX,
    #[cfg(feature = "ffmpeg_4_4")]
    SGA_VIDEO,
    #[cfg(feature = "ffmpeg_4_4")]
    PCM_SGA,
    #[cfg(feature = "ffmpeg_4_4")]
    ADPCM_IMA_MOFLEX,
    #[cfg(feature = "ffmpeg_4_4")]
    FASTAUDIO,

    #[cfg(feature = "ffmpeg_5_0")]
    GEM,
    #[cfg(feature = "ffmpeg_5_0")]
    ADPCM_IMA_ACORN,
    #[cfg(feature = "ffmpeg_5_0")]
    MSNSIREN,

    #[cfg(feature = "ffmpeg_5_1")]
    VBN,
    #[cfg(feature = "ffmpeg_5_1")]
    JPEGXL,
    #[cfg(feature = "ffmpeg_5_1")]
    QOI,
    #[cfg(feature = "ffmpeg_5_1")]
    PHM,
    #[cfg(feature = "ffmpeg_5_1")]
    DFPWM,

    #[cfg(feature = "ffmpeg_6_0")]
    RADIANCE_HDR,
    #[cfg(feature = "ffmpeg_6_0")]
    WBMP,
    #[cfg(feature = "ffmpeg_6_0")]
    MEDIA100,
    #[cfg(feature = "ffmpeg_6_0")]
    VQC,
    #[cfg(feature = "ffmpeg_6_0")]
    ADPCM_XMD,
    #[cfg(feature = "ffmpeg_6_0")]
    WADY_DPCM,
    #[cfg(feature = "ffmpeg_6_0")]
    CBD2_DPCM,
    #[cfg(feature = "ffmpeg_6_0")]
    BONK,
    #[cfg(feature = "ffmpeg_6_0")]
    MISC4,
    #[cfg(feature = "ffmpeg_6_0")]
    APAC,
    #[cfg(feature = "ffmpeg_6_0")]
    FTR,
    #[cfg(feature = "ffmpeg_6_0")]
    WAVARC,
    #[cfg(feature = "ffmpeg_6_0")]
    RKA,
    #[cfg(feature = "ffmpeg_6_0")]
    VNULL,
    #[cfg(feature = "ffmpeg_6_0")]
    ANULL,
}

impl Id {
    #[cfg(feature = "ff_api_vima_decoder")]
    pub const VIMA: Id = Id::ADPCM_VIMA;

    pub fn medium(&self) -> media::Type {
        unsafe { media::Type::from(avcodec_wasmedge::avcodec_get_type((*self).into())) }
    }

    // pub fn name(&self) -> &'static str {
    //     unsafe { from_utf8_unchecked(CStr::from_ptr(avcodec_get_name((*self).into())).to_bytes()) }
    // }
}

impl From<u32> for Id {
    fn from(value: u32) -> Self {
        match value {
            i if i == AV_CODEC_ID_NONE as u32 => Id::None,

            /* video codecs */
            i if i == AV_CODEC_ID_MPEG1VIDEO as u32 => Id::MPEG1VIDEO,
            i if i == AV_CODEC_ID_MPEG2VIDEO as u32 => Id::MPEG2VIDEO,
            #[cfg(all(feature = "ff_api_xvmc", not(feature = "ffmpeg_5_0")))]
            i if i == AV_CODEC_ID_MPEG2VIDEO_XVMC as u32 => Id::MPEG2VIDEO_XVMC,

            i if i == AV_CODEC_ID_H261 as u32 => Id::H261,
            i if i == AV_CODEC_ID_H263 as u32 => Id::H263,
            i if i == AV_CODEC_ID_RV10 as u32 => Id::RV10,
            i if i == AV_CODEC_ID_RV20 as u32 => Id::RV20,
            i if i == AV_CODEC_ID_MJPEG as u32 => Id::MJPEG,
            i if i == AV_CODEC_ID_MJPEGB as u32 => Id::MJPEGB,
            i if i == AV_CODEC_ID_LJPEG as u32 => Id::LJPEG,
            i if i == AV_CODEC_ID_SP5X as u32 => Id::SP5X,
            i if i == AV_CODEC_ID_JPEGLS as u32 => Id::JPEGLS,
            i if i == AV_CODEC_ID_MPEG4 as u32 => Id::MPEG4,
            i if i == AV_CODEC_ID_RAWVIDEO as u32 => Id::RAWVIDEO,
            i if i == AV_CODEC_ID_MSMPEG4V1 as u32 => Id::MSMPEG4V1,
            i if i == AV_CODEC_ID_MSMPEG4V2 as u32 => Id::MSMPEG4V2,
            i if i == AV_CODEC_ID_MSMPEG4V3 as u32 => Id::MSMPEG4V3,
            i if i == AV_CODEC_ID_WMV1 as u32 => Id::WMV1,
            i if i == AV_CODEC_ID_WMV2 as u32 => Id::WMV2,
            i if i == AV_CODEC_ID_H263P as u32 => Id::H263P,
            i if i == AV_CODEC_ID_H263I as u32 => Id::H263I,
            i if i == AV_CODEC_ID_FLV1 as u32 => Id::FLV1,
            i if i == AV_CODEC_ID_SVQ1 as u32 => Id::SVQ1,
            i if i == AV_CODEC_ID_SVQ3 as u32 => Id::SVQ3,
            i if i == AV_CODEC_ID_DVVIDEO as u32 => Id::DVVIDEO,
            i if i == AV_CODEC_ID_HUFFYUV as u32 => Id::HUFFYUV,
            i if i == AV_CODEC_ID_CYUV as u32 => Id::CYUV,
            i if i == AV_CODEC_ID_H264 as u32 => Id::H264,
            i if i == AV_CODEC_ID_INDEO3 as u32 => Id::INDEO3,
            i if i == AV_CODEC_ID_VP3 as u32 => Id::VP3,
            i if i == AV_CODEC_ID_THEORA as u32 => Id::THEORA,
            i if i == AV_CODEC_ID_ASV1 as u32 => Id::ASV1,
            i if i == AV_CODEC_ID_ASV2 as u32 => Id::ASV2,
            i if i == AV_CODEC_ID_FFV1 as u32 => Id::FFV1,
            i if i == AV_CODEC_ID_4XM as u32 => Id::XM4,
            i if i == AV_CODEC_ID_VCR1 as u32 => Id::VCR1,
            i if i == AV_CODEC_ID_CLJR as u32 => Id::CLJR,
            i if i == AV_CODEC_ID_MDEC as u32 => Id::MDEC,
            i if i == AV_CODEC_ID_ROQ as u32 => Id::ROQ,
            i if i == AV_CODEC_ID_INTERPLAY_VIDEO as u32 => Id::INTERPLAY_VIDEO,
            i if i == AV_CODEC_ID_XAN_WC3 as u32 => Id::XAN_WC3,
            i if i == AV_CODEC_ID_XAN_WC4 as u32 => Id::XAN_WC4,
            i if i == AV_CODEC_ID_RPZA as u32 => Id::RPZA,
            i if i == AV_CODEC_ID_CINEPAK as u32 => Id::CINEPAK,
            i if i == AV_CODEC_ID_WS_VQA as u32 => Id::WS_VQA,
            i if i == AV_CODEC_ID_MSRLE as u32 => Id::MSRLE,
            i if i == AV_CODEC_ID_MSVIDEO1 as u32 => Id::MSVIDEO1,
            i if i == AV_CODEC_ID_IDCIN as u32 => Id::IDCIN,
            i if i == AV_CODEC_ID_8BPS as u32 => Id::BPS8,
            i if i == AV_CODEC_ID_SMC as u32 => Id::SMC,
            i if i == AV_CODEC_ID_FLIC as u32 => Id::FLIC,
            i if i == AV_CODEC_ID_TRUEMOTION1 as u32 => Id::TRUEMOTION1,
            i if i == AV_CODEC_ID_VMDVIDEO as u32 => Id::VMDVIDEO,
            i if i == AV_CODEC_ID_MSZH as u32 => Id::MSZH,
            i if i == AV_CODEC_ID_ZLIB as u32 => Id::ZLIB,
            i if i == AV_CODEC_ID_QTRLE as u32 => Id::QTRLE,
            i if i == AV_CODEC_ID_TSCC as u32 => Id::TSCC,
            i if i == AV_CODEC_ID_ULTI as u32 => Id::ULTI,
            i if i == AV_CODEC_ID_QDRAW as u32 => Id::QDRAW,
            i if i == AV_CODEC_ID_VIXL as u32 => Id::VIXL,
            i if i == AV_CODEC_ID_QPEG as u32 => Id::QPEG,
            i if i == AV_CODEC_ID_PNG as u32 => Id::PNG,
            i if i == AV_CODEC_ID_PPM as u32 => Id::PPM,
            i if i == AV_CODEC_ID_PBM as u32 => Id::PBM,
            i if i == AV_CODEC_ID_PGM as u32 => Id::PGM,
            i if i == AV_CODEC_ID_PGMYUV as u32 => Id::PGMYUV,
            i if i == AV_CODEC_ID_PAM as u32 => Id::PAM,
            i if i == AV_CODEC_ID_FFVHUFF as u32 => Id::FFVHUFF,
            i if i == AV_CODEC_ID_RV30 as u32 => Id::RV30,
            i if i == AV_CODEC_ID_RV40 as u32 => Id::RV40,
            i if i == AV_CODEC_ID_VC1 as u32 => Id::VC1,
            i if i == AV_CODEC_ID_WMV3 as u32 => Id::WMV3,
            i if i == AV_CODEC_ID_LOCO as u32 => Id::LOCO,
            i if i == AV_CODEC_ID_WNV1 as u32 => Id::WNV1,
            i if i == AV_CODEC_ID_AASC as u32 => Id::AASC,
            i if i == AV_CODEC_ID_INDEO2 as u32 => Id::INDEO2,
            i if i == AV_CODEC_ID_FRAPS as u32 => Id::FRAPS,
            i if i == AV_CODEC_ID_TRUEMOTION2 as u32 => Id::TRUEMOTION2,
            i if i == AV_CODEC_ID_BMP as u32 => Id::BMP,
            i if i == AV_CODEC_ID_CSCD as u32 => Id::CSCD,
            i if i == AV_CODEC_ID_MMVIDEO as u32 => Id::MMVIDEO,
            i if i == AV_CODEC_ID_ZMBV as u32 => Id::ZMBV,
            i if i == AV_CODEC_ID_AVS as u32 => Id::AVS,
            i if i == AV_CODEC_ID_SMACKVIDEO as u32 => Id::SMACKVIDEO,
            i if i == AV_CODEC_ID_NUV as u32 => Id::NUV,
            i if i == AV_CODEC_ID_KMVC as u32 => Id::KMVC,
            i if i == AV_CODEC_ID_FLASHSV as u32 => Id::FLASHSV,
            i if i == AV_CODEC_ID_CAVS as u32 => Id::CAVS,
            i if i == AV_CODEC_ID_JPEG2000 as u32 => Id::JPEG2000,
            i if i == AV_CODEC_ID_VMNC as u32 => Id::VMNC,
            i if i == AV_CODEC_ID_VP5 as u32 => Id::VP5,
            i if i == AV_CODEC_ID_VP6 as u32 => Id::VP6,
            i if i == AV_CODEC_ID_VP6F as u32 => Id::VP6F,
            i if i == AV_CODEC_ID_TARGA as u32 => Id::TARGA,
            i if i == AV_CODEC_ID_DSICINVIDEO as u32 => Id::DSICINVIDEO,
            i if i == AV_CODEC_ID_TIERTEXSEQVIDEO as u32 => Id::TIERTEXSEQVIDEO,
            i if i == AV_CODEC_ID_TIFF as u32 => Id::TIFF,
            i if i == AV_CODEC_ID_GIF as u32 => Id::GIF,
            i if i == AV_CODEC_ID_DXA as u32 => Id::DXA,
            i if i == AV_CODEC_ID_DNXHD as u32 => Id::DNXHD,
            i if i == AV_CODEC_ID_THP as u32 => Id::THP,
            i if i == AV_CODEC_ID_SGI as u32 => Id::SGI,
            i if i == AV_CODEC_ID_C93 as u32 => Id::C93,
            i if i == AV_CODEC_ID_BETHSOFTVID as u32 => Id::BETHSOFTVID,
            i if i == AV_CODEC_ID_PTX as u32 => Id::PTX,
            i if i == AV_CODEC_ID_TXD as u32 => Id::TXD,
            i if i == AV_CODEC_ID_VP6A as u32 => Id::VP6A,
            i if i == AV_CODEC_ID_AMV as u32 => Id::AMV,
            i if i == AV_CODEC_ID_VB as u32 => Id::VB,
            i if i == AV_CODEC_ID_PCX as u32 => Id::PCX,
            i if i == AV_CODEC_ID_SUNRAST as u32 => Id::SUNRAST,
            i if i == AV_CODEC_ID_INDEO4 as u32 => Id::INDEO4,
            i if i == AV_CODEC_ID_INDEO5 as u32 => Id::INDEO5,
            i if i == AV_CODEC_ID_MIMIC as u32 => Id::MIMIC,
            i if i == AV_CODEC_ID_RL2 as u32 => Id::RL2,
            i if i == AV_CODEC_ID_ESCAPE124 as u32 => Id::ESCAPE124,
            i if i == AV_CODEC_ID_DIRAC as u32 => Id::DIRAC,
            i if i == AV_CODEC_ID_BFI as u32 => Id::BFI,
            i if i == AV_CODEC_ID_CMV as u32 => Id::CMV,
            i if i == AV_CODEC_ID_MOTIONPIXELS as u32 => Id::MOTIONPIXELS,
            i if i == AV_CODEC_ID_TGV as u32 => Id::TGV,
            i if i == AV_CODEC_ID_TGQ as u32 => Id::TGQ,
            i if i == AV_CODEC_ID_TQI as u32 => Id::TQI,
            i if i == AV_CODEC_ID_AURA as u32 => Id::AURA,
            i if i == AV_CODEC_ID_AURA2 as u32 => Id::AURA2,
            i if i == AV_CODEC_ID_V210X as u32 => Id::V210X,
            i if i == AV_CODEC_ID_TMV as u32 => Id::TMV,
            i if i == AV_CODEC_ID_V210 as u32 => Id::V210,
            i if i == AV_CODEC_ID_DPX as u32 => Id::DPX,
            i if i == AV_CODEC_ID_MAD as u32 => Id::MAD,
            i if i == AV_CODEC_ID_FRWU as u32 => Id::FRWU,
            i if i == AV_CODEC_ID_FLASHSV2 as u32 => Id::FLASHSV2,
            i if i == AV_CODEC_ID_CDGRAPHICS as u32 => Id::CDGRAPHICS,
            i if i == AV_CODEC_ID_R210 as u32 => Id::R210,
            i if i == AV_CODEC_ID_ANM as u32 => Id::ANM,
            i if i == AV_CODEC_ID_BINKVIDEO as u32 => Id::BINKVIDEO,
            i if i == AV_CODEC_ID_IFF_ILBM as u32 => Id::IFF_ILBM,
            i if i == AV_CODEC_ID_KGV1 as u32 => Id::KGV1,
            i if i == AV_CODEC_ID_YOP as u32 => Id::YOP,
            i if i == AV_CODEC_ID_VP8 as u32 => Id::VP8,
            i if i == AV_CODEC_ID_PICTOR as u32 => Id::PICTOR,
            i if i == AV_CODEC_ID_ANSI as u32 => Id::ANSI,
            i if i == AV_CODEC_ID_A64_MULTI as u32 => Id::A64_MULTI,
            i if i == AV_CODEC_ID_A64_MULTI5 as u32 => Id::A64_MULTI5,
            i if i == AV_CODEC_ID_R10K as u32 => Id::R10K,
            i if i == AV_CODEC_ID_MXPEG as u32 => Id::MXPEG,
            i if i == AV_CODEC_ID_LAGARITH as u32 => Id::LAGARITH,
            i if i == AV_CODEC_ID_PRORES as u32 => Id::PRORES,
            i if i == AV_CODEC_ID_JV as u32 => Id::JV,
            i if i == AV_CODEC_ID_DFA as u32 => Id::DFA,
            i if i == AV_CODEC_ID_WMV3IMAGE as u32 => Id::WMV3IMAGE,
            i if i == AV_CODEC_ID_VC1IMAGE as u32 => Id::VC1IMAGE,
            i if i == AV_CODEC_ID_UTVIDEO as u32 => Id::UTVIDEO,
            i if i == AV_CODEC_ID_BMV_VIDEO as u32 => Id::BMV_VIDEO,
            i if i == AV_CODEC_ID_VBLE as u32 => Id::VBLE,
            i if i == AV_CODEC_ID_DXTORY as u32 => Id::DXTORY,
            i if i == AV_CODEC_ID_V410 as u32 => Id::V410,
            i if i == AV_CODEC_ID_XWD as u32 => Id::XWD,
            i if i == AV_CODEC_ID_CDXL as u32 => Id::CDXL,
            i if i == AV_CODEC_ID_XBM as u32 => Id::XBM,
            i if i == AV_CODEC_ID_ZEROCODEC as u32 => Id::ZEROCODEC,
            i if i == AV_CODEC_ID_MSS1 as u32 => Id::MSS1,
            i if i == AV_CODEC_ID_MSA1 as u32 => Id::MSA1,
            i if i == AV_CODEC_ID_TSCC2 as u32 => Id::TSCC2,
            i if i == AV_CODEC_ID_MTS2 as u32 => Id::MTS2,
            i if i == AV_CODEC_ID_CLLC as u32 => Id::CLLC,
            i if i == AV_CODEC_ID_MSS2 as u32 => Id::MSS2,
            i if i == AV_CODEC_ID_VP9 as u32 => Id::VP9,
            i if i == AV_CODEC_ID_AIC as u32 => Id::AIC,
            i if i == AV_CODEC_ID_ESCAPE130 as u32 => Id::ESCAPE130,
            i if i == AV_CODEC_ID_G2M as u32 => Id::G2M,
            i if i == AV_CODEC_ID_WEBP as u32 => Id::WEBP,
            i if i == AV_CODEC_ID_HNM4_VIDEO as u32 => Id::HNM4_VIDEO,
            i if i == AV_CODEC_ID_HEVC as u32 => Id::HEVC,
            i if i == AV_CODEC_ID_FIC as u32 => Id::FIC,
            i if i == AV_CODEC_ID_ALIAS_PIX as u32 => Id::ALIAS_PIX,
            i if i == AV_CODEC_ID_BRENDER_PIX as u32 => Id::BRENDER_PIX,
            i if i == AV_CODEC_ID_PAF_VIDEO as u32 => Id::PAF_VIDEO,
            i if i == AV_CODEC_ID_EXR as u32 => Id::EXR,
            i if i == AV_CODEC_ID_VP7 as u32 => Id::VP7,
            i if i == AV_CODEC_ID_SANM as u32 => Id::SANM,
            i if i == AV_CODEC_ID_SGIRLE as u32 => Id::SGIRLE,
            i if i == AV_CODEC_ID_MVC1 as u32 => Id::MVC1,
            i if i == AV_CODEC_ID_MVC2 as u32 => Id::MVC2,
            i if i == AV_CODEC_ID_HQX as u32 => Id::HQX,
            i if i == AV_CODEC_ID_TDSC as u32 => Id::TDSC,
            i if i == AV_CODEC_ID_HQ_HQA as u32 => Id::HQ_HQA,
            i if i == AV_CODEC_ID_HAP as u32 => Id::HAP,
            i if i == AV_CODEC_ID_DDS as u32 => Id::DDS,
            i if i == AV_CODEC_ID_DXV as u32 => Id::DXV,
            i if i == AV_CODEC_ID_SCREENPRESSO as u32 => Id::SCREENPRESSO,
            i if i == AV_CODEC_ID_RSCC as u32 => Id::RSCC,

            i if i == AV_CODEC_ID_Y41P as u32 => Id::Y41P,
            i if i == AV_CODEC_ID_AVRP as u32 => Id::AVRP,
            i if i == AV_CODEC_ID_012V as u32 => Id::V012,
            i if i == AV_CODEC_ID_AVUI as u32 => Id::AVUI,
            i if i == AV_CODEC_ID_AYUV as u32 => Id::AYUV,
            i if i == AV_CODEC_ID_TARGA_Y216 as u32 => Id::TARGA_Y216,
            i if i == AV_CODEC_ID_V308 as u32 => Id::V308,
            i if i == AV_CODEC_ID_V408 as u32 => Id::V408,
            i if i == AV_CODEC_ID_YUV4 as u32 => Id::YUV4,
            i if i == AV_CODEC_ID_AVRN as u32 => Id::AVRN,
            i if i == AV_CODEC_ID_CPIA as u32 => Id::CPIA,
            i if i == AV_CODEC_ID_XFACE as u32 => Id::XFACE,
            i if i == AV_CODEC_ID_SNOW as u32 => Id::SNOW,
            i if i == AV_CODEC_ID_SMVJPEG as u32 => Id::SMVJPEG,
            i if i == AV_CODEC_ID_APNG as u32 => Id::APNG,
            i if i == AV_CODEC_ID_DAALA as u32 => Id::DAALA,
            i if i == AV_CODEC_ID_CFHD as u32 => Id::CFHD,
            i if i == AV_CODEC_ID_TRUEMOTION2RT as u32 => Id::TRUEMOTION2RT,
            i if i == AV_CODEC_ID_M101 as u32 => Id::M101,
            i if i == AV_CODEC_ID_MAGICYUV as u32 => Id::MAGICYUV,
            i if i == AV_CODEC_ID_SHEERVIDEO as u32 => Id::SHEERVIDEO,
            i if i == AV_CODEC_ID_YLC as u32 => Id::YLC,

            /* various PCM "codecs" */
            i if i == AV_CODEC_ID_PCM_S16LE as u32 => Id::PCM_S16LE,
            i if i == AV_CODEC_ID_PCM_S16BE as u32 => Id::PCM_S16BE,
            i if i == AV_CODEC_ID_PCM_U16LE as u32 => Id::PCM_U16LE,
            i if i == AV_CODEC_ID_PCM_U16BE as u32 => Id::PCM_U16BE,
            i if i == AV_CODEC_ID_PCM_S8 as u32 => Id::PCM_S8,
            i if i == AV_CODEC_ID_PCM_U8 as u32 => Id::PCM_U8,
            i if i == AV_CODEC_ID_PCM_MULAW as u32 => Id::PCM_MULAW,
            i if i == AV_CODEC_ID_PCM_ALAW as u32 => Id::PCM_ALAW,
            i if i == AV_CODEC_ID_PCM_S32LE as u32 => Id::PCM_S32LE,
            i if i == AV_CODEC_ID_PCM_S32BE as u32 => Id::PCM_S32BE,
            i if i == AV_CODEC_ID_PCM_U32LE as u32 => Id::PCM_U32LE,
            i if i == AV_CODEC_ID_PCM_U32BE as u32 => Id::PCM_U32BE,
            i if i == AV_CODEC_ID_PCM_S24LE as u32 => Id::PCM_S24LE,
            i if i == AV_CODEC_ID_PCM_S24BE as u32 => Id::PCM_S24BE,
            i if i == AV_CODEC_ID_PCM_U24LE as u32 => Id::PCM_U24LE,
            i if i == AV_CODEC_ID_PCM_U24BE as u32 => Id::PCM_U24BE,
            i if i == AV_CODEC_ID_PCM_S24DAUD as u32 => Id::PCM_S24DAUD,
            i if i == AV_CODEC_ID_PCM_ZORK as u32 => Id::PCM_ZORK,
            i if i == AV_CODEC_ID_PCM_S16LE_PLANAR as u32 => Id::PCM_S16LE_PLANAR,
            i if i == AV_CODEC_ID_PCM_DVD as u32 => Id::PCM_DVD,
            i if i == AV_CODEC_ID_PCM_F32BE as u32 => Id::PCM_F32BE,
            i if i == AV_CODEC_ID_PCM_F32LE as u32 => Id::PCM_F32LE,
            i if i == AV_CODEC_ID_PCM_F64BE as u32 => Id::PCM_F64BE,
            i if i == AV_CODEC_ID_PCM_F64LE as u32 => Id::PCM_F64LE,
            i if i == AV_CODEC_ID_PCM_BLURAY as u32 => Id::PCM_BLURAY,
            i if i == AV_CODEC_ID_PCM_LXF as u32 => Id::PCM_LXF,
            i if i == AV_CODEC_ID_S302M as u32 => Id::S302M,
            i if i == AV_CODEC_ID_PCM_S8_PLANAR as u32 => Id::PCM_S8_PLANAR,
            i if i == AV_CODEC_ID_PCM_S24LE_PLANAR as u32 => Id::PCM_S24LE_PLANAR,
            i if i == AV_CODEC_ID_PCM_S32LE_PLANAR as u32 => Id::PCM_S32LE_PLANAR,
            i if i == AV_CODEC_ID_PCM_S16BE_PLANAR as u32 => Id::PCM_S16BE_PLANAR,

            i if i == AV_CODEC_ID_PCM_S64LE as u32 => Id::PCM_S64LE,
            i if i == AV_CODEC_ID_PCM_S64BE as u32 => Id::PCM_S64BE,

            //            /* various ADPCM codecs */
            i if i == AV_CODEC_ID_ADPCM_IMA_QT as u32 => Id::ADPCM_IMA_QT,
            i if i == AV_CODEC_ID_ADPCM_IMA_WAV as u32 => Id::ADPCM_IMA_WAV,
            i if i == AV_CODEC_ID_ADPCM_IMA_DK3 as u32 => Id::ADPCM_IMA_DK3,
            i if i == AV_CODEC_ID_ADPCM_IMA_DK4 as u32 => Id::ADPCM_IMA_DK4,
            i if i == AV_CODEC_ID_ADPCM_IMA_WS as u32 => Id::ADPCM_IMA_WS,
            i if i == AV_CODEC_ID_ADPCM_IMA_SMJPEG as u32 => Id::ADPCM_IMA_SMJPEG,
            i if i == AV_CODEC_ID_ADPCM_MS as u32 => Id::ADPCM_MS,
            i if i == AV_CODEC_ID_ADPCM_4XM as u32 => Id::ADPCM_4XM,
            i if i == AV_CODEC_ID_ADPCM_XA as u32 => Id::ADPCM_XA,
            i if i == AV_CODEC_ID_ADPCM_ADX as u32 => Id::ADPCM_ADX,
            i if i == AV_CODEC_ID_ADPCM_EA as u32 => Id::ADPCM_EA,
            i if i == AV_CODEC_ID_ADPCM_G726 as u32 => Id::ADPCM_G726,
            i if i == AV_CODEC_ID_ADPCM_CT as u32 => Id::ADPCM_CT,
            i if i == AV_CODEC_ID_ADPCM_SWF as u32 => Id::ADPCM_SWF,
            i if i == AV_CODEC_ID_ADPCM_YAMAHA as u32 => Id::ADPCM_YAMAHA,
            i if i == AV_CODEC_ID_ADPCM_SBPRO_4 as u32 => Id::ADPCM_SBPRO_4,
            i if i == AV_CODEC_ID_ADPCM_SBPRO_3 as u32 => Id::ADPCM_SBPRO_3,
            i if i == AV_CODEC_ID_ADPCM_SBPRO_2 as u32 => Id::ADPCM_SBPRO_2,
            i if i == AV_CODEC_ID_ADPCM_THP as u32 => Id::ADPCM_THP,
            i if i == AV_CODEC_ID_ADPCM_IMA_AMV as u32 => Id::ADPCM_IMA_AMV,
            i if i == AV_CODEC_ID_ADPCM_EA_R1 as u32 => Id::ADPCM_EA_R1,
            i if i == AV_CODEC_ID_ADPCM_EA_R3 as u32 => Id::ADPCM_EA_R3,
            i if i == AV_CODEC_ID_ADPCM_EA_R2 as u32 => Id::ADPCM_EA_R2,
            i if i == AV_CODEC_ID_ADPCM_IMA_EA_SEAD as u32 => Id::ADPCM_IMA_EA_SEAD,
            i if i == AV_CODEC_ID_ADPCM_IMA_EA_EACS as u32 => Id::ADPCM_IMA_EA_EACS,
            i if i == AV_CODEC_ID_ADPCM_EA_XAS as u32 => Id::ADPCM_EA_XAS,
            i if i == AV_CODEC_ID_ADPCM_EA_MAXIS_XA as u32 => Id::ADPCM_EA_MAXIS_XA,
            i if i == AV_CODEC_ID_ADPCM_IMA_ISS as u32 => Id::ADPCM_IMA_ISS,
            i if i == AV_CODEC_ID_ADPCM_G722 as u32 => Id::ADPCM_G722,
            i if i == AV_CODEC_ID_ADPCM_IMA_APC as u32 => Id::ADPCM_IMA_APC,
            i if i == AV_CODEC_ID_ADPCM_VIMA as u32 => Id::ADPCM_VIMA,

            i if i == AV_CODEC_ID_ADPCM_AFC as u32 => Id::ADPCM_AFC,
            i if i == AV_CODEC_ID_ADPCM_IMA_OKI as u32 => Id::ADPCM_IMA_OKI,
            i if i == AV_CODEC_ID_ADPCM_DTK as u32 => Id::ADPCM_DTK,
            i if i == AV_CODEC_ID_ADPCM_IMA_RAD as u32 => Id::ADPCM_IMA_RAD,
            i if i == AV_CODEC_ID_ADPCM_G726LE as u32 => Id::ADPCM_G726LE,
            i if i == AV_CODEC_ID_ADPCM_THP_LE as u32 => Id::ADPCM_THP_LE,
            i if i == AV_CODEC_ID_ADPCM_PSX as u32 => Id::ADPCM_PSX,
            i if i == AV_CODEC_ID_ADPCM_AICA as u32 => Id::ADPCM_AICA,
            i if i == AV_CODEC_ID_ADPCM_IMA_DAT4 as u32 => Id::ADPCM_IMA_DAT4,
            i if i == AV_CODEC_ID_ADPCM_MTAF as u32 => Id::ADPCM_MTAF,

            /* AMR */
            i if i == AV_CODEC_ID_AMR_NB as u32 => Id::AMR_NB,
            i if i == AV_CODEC_ID_AMR_WB as u32 => Id::AMR_WB,

            /* RealAudio codecs*/
            i if i == AV_CODEC_ID_RA_144 as u32 => Id::RA_144,
            i if i == AV_CODEC_ID_RA_288 as u32 => Id::RA_288,

            /* various DPCM codecs */
            i if i == AV_CODEC_ID_ROQ_DPCM as u32 => Id::ROQ_DPCM,
            i if i == AV_CODEC_ID_INTERPLAY_DPCM as u32 => Id::INTERPLAY_DPCM,
            i if i == AV_CODEC_ID_XAN_DPCM as u32 => Id::XAN_DPCM,
            i if i == AV_CODEC_ID_SOL_DPCM as u32 => Id::SOL_DPCM,
            i if i == AV_CODEC_ID_SDX2_DPCM as u32 => Id::SDX2_DPCM,

            /* audio codecs */
            i if i == AV_CODEC_ID_MP2 as u32 => Id::MP2,
            i if i == AV_CODEC_ID_MP3 as u32 => Id::MP3,
            i if i == AV_CODEC_ID_AAC as u32 => Id::AAC,
            i if i == AV_CODEC_ID_AC3 as u32 => Id::AC3,
            i if i == AV_CODEC_ID_DTS as u32 => Id::DTS,
            i if i == AV_CODEC_ID_VORBIS as u32 => Id::VORBIS,
            i if i == AV_CODEC_ID_DVAUDIO as u32 => Id::DVAUDIO,
            i if i == AV_CODEC_ID_WMAV1 as u32 => Id::WMAV1,
            i if i == AV_CODEC_ID_WMAV2 as u32 => Id::WMAV2,
            i if i == AV_CODEC_ID_MACE3 as u32 => Id::MACE3,
            i if i == AV_CODEC_ID_MACE6 as u32 => Id::MACE6,
            i if i == AV_CODEC_ID_VMDAUDIO as u32 => Id::VMDAUDIO,
            i if i == AV_CODEC_ID_FLAC as u32 => Id::FLAC,
            i if i == AV_CODEC_ID_MP3ADU as u32 => Id::MP3ADU,
            i if i == AV_CODEC_ID_MP3ON4 as u32 => Id::MP3ON4,
            i if i == AV_CODEC_ID_SHORTEN as u32 => Id::SHORTEN,
            i if i == AV_CODEC_ID_ALAC as u32 => Id::ALAC,
            i if i == AV_CODEC_ID_WESTWOOD_SND1 as u32 => Id::WESTWOOD_SND1,
            i if i == AV_CODEC_ID_GSM as u32 => Id::GSM,
            i if i == AV_CODEC_ID_QDM2 as u32 => Id::QDM2,
            i if i == AV_CODEC_ID_COOK as u32 => Id::COOK,
            i if i == AV_CODEC_ID_TRUESPEECH as u32 => Id::TRUESPEECH,
            i if i == AV_CODEC_ID_TTA as u32 => Id::TTA,
            i if i == AV_CODEC_ID_SMACKAUDIO as u32 => Id::SMACKAUDIO,
            i if i == AV_CODEC_ID_QCELP as u32 => Id::QCELP,
            i if i == AV_CODEC_ID_WAVPACK as u32 => Id::WAVPACK,
            i if i == AV_CODEC_ID_DSICINAUDIO as u32 => Id::DSICINAUDIO,
            i if i == AV_CODEC_ID_IMC as u32 => Id::IMC,
            i if i == AV_CODEC_ID_MUSEPACK7 as u32 => Id::MUSEPACK7,
            i if i == AV_CODEC_ID_MLP as u32 => Id::MLP,
            i if i == AV_CODEC_ID_GSM_MS as u32 => Id::GSM_MS,
            i if i == AV_CODEC_ID_ATRAC3 as u32 => Id::ATRAC3,

            #[cfg(feature = "ff_api_voxware")]
            i if i == AV_CODEC_ID_VOXWARE as u32 => Id::VOXWARE,

            i if i == AV_CODEC_ID_APE as u32 => Id::APE,
            i if i == AV_CODEC_ID_NELLYMOSER as u32 => Id::NELLYMOSER,
            i if i == AV_CODEC_ID_MUSEPACK8 as u32 => Id::MUSEPACK8,
            i if i == AV_CODEC_ID_SPEEX as u32 => Id::SPEEX,
            i if i == AV_CODEC_ID_WMAVOICE as u32 => Id::WMAVOICE,
            i if i == AV_CODEC_ID_WMAPRO as u32 => Id::WMAPRO,
            i if i == AV_CODEC_ID_WMALOSSLESS as u32 => Id::WMALOSSLESS,
            i if i == AV_CODEC_ID_ATRAC3P as u32 => Id::ATRAC3P,
            i if i == AV_CODEC_ID_EAC3 as u32 => Id::EAC3,
            i if i == AV_CODEC_ID_SIPR as u32 => Id::SIPR,
            i if i == AV_CODEC_ID_MP1 as u32 => Id::MP1,
            i if i == AV_CODEC_ID_TWINVQ as u32 => Id::TWINVQ,
            i if i == AV_CODEC_ID_TRUEHD as u32 => Id::TRUEHD,
            i if i == AV_CODEC_ID_MP4ALS as u32 => Id::MP4ALS,
            i if i == AV_CODEC_ID_ATRAC1 as u32 => Id::ATRAC1,
            i if i == AV_CODEC_ID_BINKAUDIO_RDFT as u32 => Id::BINKAUDIO_RDFT,
            i if i == AV_CODEC_ID_BINKAUDIO_DCT as u32 => Id::BINKAUDIO_DCT,
            i if i == AV_CODEC_ID_AAC_LATM as u32 => Id::AAC_LATM,
            i if i == AV_CODEC_ID_QDMC as u32 => Id::QDMC,
            i if i == AV_CODEC_ID_CELT as u32 => Id::CELT,
            i if i == AV_CODEC_ID_G723_1 as u32 => Id::G723_1,
            i if i == AV_CODEC_ID_G729 as u32 => Id::G729,
            i if i == AV_CODEC_ID_8SVX_EXP as u32 => Id::SVX_EXP8,
            i if i == AV_CODEC_ID_8SVX_FIB as u32 => Id::SVX_FIB8,
            i if i == AV_CODEC_ID_BMV_AUDIO as u32 => Id::BMV_AUDIO,
            i if i == AV_CODEC_ID_RALF as u32 => Id::RALF,
            i if i == AV_CODEC_ID_IAC as u32 => Id::IAC,
            i if i == AV_CODEC_ID_ILBC as u32 => Id::ILBC,
            i if i == AV_CODEC_ID_OPUS as u32 => Id::OPUS,
            i if i == AV_CODEC_ID_COMFORT_NOISE as u32 => Id::COMFORT_NOISE,
            i if i == AV_CODEC_ID_TAK as u32 => Id::TAK,
            i if i == AV_CODEC_ID_METASOUND as u32 => Id::METASOUND,
            i if i == AV_CODEC_ID_PAF_AUDIO as u32 => Id::PAF_AUDIO,
            i if i == AV_CODEC_ID_ON2AVC as u32 => Id::ON2AVC,
            i if i == AV_CODEC_ID_DSS_SP as u32 => Id::DSS_SP,
            #[cfg(feature = "ffmpeg_4_0")]
            i if i == AV_CODEC_ID_CODEC2 as u32 => Id::CODEC2,
            i if i == AV_CODEC_ID_FFWAVESYNTH as u32 => Id::FFWAVESYNTH,
            i if i == AV_CODEC_ID_SONIC as u32 => Id::SONIC,
            i if i == AV_CODEC_ID_SONIC_LS as u32 => Id::SONIC_LS,
            i if i == AV_CODEC_ID_EVRC as u32 => Id::EVRC,
            i if i == AV_CODEC_ID_SMV as u32 => Id::SMV,
            i if i == AV_CODEC_ID_DSD_LSBF as u32 => Id::DSD_LSBF,
            i if i == AV_CODEC_ID_DSD_MSBF as u32 => Id::DSD_MSBF,
            i if i == AV_CODEC_ID_DSD_LSBF_PLANAR as u32 => Id::DSD_LSBF_PLANAR,
            i if i == AV_CODEC_ID_DSD_MSBF_PLANAR as u32 => Id::DSD_MSBF_PLANAR,
            i if i == AV_CODEC_ID_4GV as u32 => Id::_4GV,
            i if i == AV_CODEC_ID_INTERPLAY_ACM as u32 => Id::INTERPLAY_ACM,
            i if i == AV_CODEC_ID_XMA1 as u32 => Id::XMA1,
            i if i == AV_CODEC_ID_XMA2 as u32 => Id::XMA2,
            i if i == AV_CODEC_ID_DST as u32 => Id::DST,

            /* subtitle codecs */
            i if i == AV_CODEC_ID_DVD_SUBTITLE as u32 => Id::DVD_SUBTITLE,
            i if i == AV_CODEC_ID_DVB_SUBTITLE as u32 => Id::DVB_SUBTITLE,
            i if i == AV_CODEC_ID_TEXT as u32 => Id::TEXT,
            i if i == AV_CODEC_ID_XSUB as u32 => Id::XSUB,
            i if i == AV_CODEC_ID_SSA as u32 => Id::SSA,
            i if i == AV_CODEC_ID_MOV_TEXT as u32 => Id::MOV_TEXT,
            i if i == AV_CODEC_ID_HDMV_PGS_SUBTITLE as u32 => Id::HDMV_PGS_SUBTITLE,
            i if i == AV_CODEC_ID_DVB_TELETEXT as u32 => Id::DVB_TELETEXT,
            i if i == AV_CODEC_ID_SRT as u32 => Id::SRT,

            i if i == AV_CODEC_ID_MICRODVD as u32 => Id::MICRODVD,
            i if i == AV_CODEC_ID_EIA_608 as u32 => Id::EIA_608,
            i if i == AV_CODEC_ID_JACOSUB as u32 => Id::JACOSUB,
            i if i == AV_CODEC_ID_SAMI as u32 => Id::SAMI,
            i if i == AV_CODEC_ID_REALTEXT as u32 => Id::REALTEXT,
            i if i == AV_CODEC_ID_STL as u32 => Id::STL,
            i if i == AV_CODEC_ID_SUBVIEWER1 as u32 => Id::SUBVIEWER1,
            i if i == AV_CODEC_ID_SUBVIEWER as u32 => Id::SUBVIEWER,
            i if i == AV_CODEC_ID_SUBRIP as u32 => Id::SUBRIP,
            i if i == AV_CODEC_ID_WEBVTT as u32 => Id::WEBVTT,
            i if i == AV_CODEC_ID_MPL2 as u32 => Id::MPL2,
            i if i == AV_CODEC_ID_VPLAYER as u32 => Id::VPLAYER,
            i if i == AV_CODEC_ID_PJS as u32 => Id::PJS,
            i if i == AV_CODEC_ID_ASS as u32 => Id::ASS,
            i if i == AV_CODEC_ID_HDMV_TEXT_SUBTITLE as u32 => Id::HDMV_TEXT_SUBTITLE,

            /* other specific kind of codecs (generally used for attachments) */
            i if i == AV_CODEC_ID_TTF as u32 => Id::TTF,
            i if i == AV_CODEC_ID_SCTE_35 as u32 => Id::SCTE_35,
            i if i == AV_CODEC_ID_BINTEXT as u32 => Id::BINTEXT,
            i if i == AV_CODEC_ID_XBIN as u32 => Id::XBIN,
            i if i == AV_CODEC_ID_IDF as u32 => Id::IDF,
            i if i == AV_CODEC_ID_OTF as u32 => Id::OTF,
            i if i == AV_CODEC_ID_SMPTE_KLV as u32 => Id::SMPTE_KLV,
            i if i == AV_CODEC_ID_DVD_NAV as u32 => Id::DVD_NAV,
            i if i == AV_CODEC_ID_TIMED_ID3 as u32 => Id::TIMED_ID3,
            i if i == AV_CODEC_ID_BIN_DATA as u32 => Id::BIN_DATA,

            i if i == AV_CODEC_ID_PROBE as u32 => Id::PROBE,

            i if i == AV_CODEC_ID_MPEG2TS as u32 => Id::MPEG2TS,
            i if i == AV_CODEC_ID_MPEG4SYSTEMS as u32 => Id::MPEG4SYSTEMS,
            i if i == AV_CODEC_ID_FFMETADATA as u32 => Id::FFMETADATA,
            i if i == AV_CODEC_ID_WRAPPED_AVFRAME as u32 => Id::WRAPPED_AVFRAME,
            i if i == AV_CODEC_ID_PSD as u32 => Id::PSD,
            i if i == AV_CODEC_ID_PIXLET as u32 => Id::PIXLET,
            i if i == AV_CODEC_ID_SPEEDHQ as u32 => Id::SPEEDHQ,
            i if i == AV_CODEC_ID_CLEARVIDEO as u32 => Id::CLEARVIDEO,
            i if i == AV_CODEC_ID_FMVC as u32 => Id::FMVC,
            i if i == AV_CODEC_ID_SCPR as u32 => Id::SCPR,
            i if i == AV_CODEC_ID_XPM as u32 => Id::XPM,
            i if i == AV_CODEC_ID_AV1 as u32 => Id::AV1,
            i if i == AV_CODEC_ID_PCM_F16LE as u32 => Id::PCM_F16LE,
            i if i == AV_CODEC_ID_PCM_F24LE as u32 => Id::PCM_F24LE,
            i if i == AV_CODEC_ID_ATRAC3AL as u32 => Id::ATRAC3AL,
            i if i == AV_CODEC_ID_ATRAC3PAL as u32 => Id::ATRAC3PAL,

            i if i == AV_CODEC_ID_BITPACKED as u32 => Id::BITPACKED,
            i if i == AV_CODEC_ID_MSCC as u32 => Id::MSCC,
            i if i == AV_CODEC_ID_SRGC as u32 => Id::SRGC,
            i if i == AV_CODEC_ID_SVG as u32 => Id::SVG,
            i if i == AV_CODEC_ID_GDV as u32 => Id::GDV,
            i if i == AV_CODEC_ID_FITS as u32 => Id::FITS,
            i if i == AV_CODEC_ID_GREMLIN_DPCM as u32 => Id::GREMLIN_DPCM,
            i if i == AV_CODEC_ID_DOLBY_E as u32 => Id::DOLBY_E,

            #[cfg(feature = "ffmpeg_4_0")]
            i if i == AV_CODEC_ID_APTX as u32 => Id::APTX,
            #[cfg(feature = "ffmpeg_4_0")]
            i if i == AV_CODEC_ID_APTX_HD as u32 => Id::APTX_HD,
            #[cfg(feature = "ffmpeg_4_0")]
            i if i == AV_CODEC_ID_SBC as u32 => Id::SBC,
            #[cfg(feature = "ffmpeg_4_1")]
            i if i == AV_CODEC_ID_AVS2 as u32 => Id::AVS2,
            #[cfg(feature = "ffmpeg_4_1")]
            i if i == AV_CODEC_ID_IMM4 as u32 => Id::IMM4,
            #[cfg(feature = "ffmpeg_4_1")]
            i if i == AV_CODEC_ID_PROSUMER as u32 => Id::PROSUMER,
            #[cfg(feature = "ffmpeg_4_1")]
            i if i == AV_CODEC_ID_MWSC as u32 => Id::MWSC,
            #[cfg(feature = "ffmpeg_4_1")]
            i if i == AV_CODEC_ID_WCMV as u32 => Id::WCMV,
            #[cfg(feature = "ffmpeg_4_1")]
            i if i == AV_CODEC_ID_RASC as u32 => Id::RASC,
            #[cfg(feature = "ffmpeg_4_1")]
            i if i == AV_CODEC_ID_PCM_VIDC as u32 => Id::PCM_VIDC,
            #[cfg(feature = "ffmpeg_4_1")]
            i if i == AV_CODEC_ID_ATRAC9 as u32 => Id::ATRAC9,
            #[cfg(feature = "ffmpeg_4_1")]
            i if i == AV_CODEC_ID_TTML as u32 => Id::TTML,
            #[cfg(feature = "ffmpeg_4_2")]
            i if i == AV_CODEC_ID_HYMT as u32 => Id::HYMT,
            #[cfg(feature = "ffmpeg_4_2")]
            i if i == AV_CODEC_ID_ARBC as u32 => Id::ARBC,
            #[cfg(feature = "ffmpeg_4_2")]
            i if i == AV_CODEC_ID_AGM as u32 => Id::AGM,
            #[cfg(feature = "ffmpeg_4_2")]
            i if i == AV_CODEC_ID_LSCR as u32 => Id::LSCR,
            #[cfg(feature = "ffmpeg_4_2")]
            i if i == AV_CODEC_ID_VP4 as u32 => Id::VP4,
            #[cfg(feature = "ffmpeg_4_2")]
            i if i == AV_CODEC_ID_ADPCM_AGM as u32 => Id::ADPCM_AGM,
            #[cfg(feature = "ffmpeg_4_2")]
            i if i == AV_CODEC_ID_HCOM as u32 => Id::HCOM,
            #[cfg(feature = "ffmpeg_4_2")]
            i if i == AV_CODEC_ID_ARIB_CAPTION as u32 => Id::ARIB_CAPTION,
            #[cfg(feature = "ffmpeg_4_3")]
            i if i == AV_CODEC_ID_IMM5 as u32 => Id::IMM5,
            #[cfg(feature = "ffmpeg_4_3")]
            i if i == AV_CODEC_ID_MVDV as u32 => Id::MVDV,
            #[cfg(feature = "ffmpeg_4_3")]
            i if i == AV_CODEC_ID_MVHA as u32 => Id::MVHA,
            #[cfg(feature = "ffmpeg_4_3")]
            i if i == AV_CODEC_ID_CDTOONS as u32 => Id::CDTOONS,
            #[cfg(feature = "ffmpeg_4_3")]
            i if i == AV_CODEC_ID_MV30 as u32 => Id::MV30,
            #[cfg(feature = "ffmpeg_4_3")]
            i if i == AV_CODEC_ID_NOTCHLC as u32 => Id::NOTCHLC,
            #[cfg(feature = "ffmpeg_4_3")]
            i if i == AV_CODEC_ID_PFM as u32 => Id::PFM,
            #[cfg(feature = "ffmpeg_4_3")]
            i if i == AV_CODEC_ID_ADPCM_ARGO as u32 => Id::ADPCM_ARGO,
            #[cfg(feature = "ffmpeg_4_3")]
            i if i == AV_CODEC_ID_ADPCM_IMA_SSI as u32 => Id::ADPCM_IMA_SSI,
            #[cfg(feature = "ffmpeg_4_3")]
            i if i == AV_CODEC_ID_ADPCM_ZORK as u32 => Id::ADPCM_ZORK,
            #[cfg(feature = "ffmpeg_4_3")]
            i if i == AV_CODEC_ID_ADPCM_IMA_APM as u32 => Id::ADPCM_IMA_APM,
            #[cfg(feature = "ffmpeg_4_3")]
            i if i == AV_CODEC_ID_ADPCM_IMA_ALP as u32 => Id::ADPCM_IMA_ALP,
            #[cfg(feature = "ffmpeg_4_3")]
            i if i == AV_CODEC_ID_ADPCM_IMA_MTF as u32 => Id::ADPCM_IMA_MTF,
            #[cfg(feature = "ffmpeg_4_3")]
            i if i == AV_CODEC_ID_ADPCM_IMA_CUNNING as u32 => Id::ADPCM_IMA_CUNNING,
            #[cfg(feature = "ffmpeg_4_3")]
            i if i == AV_CODEC_ID_DERF_DPCM as u32 => Id::DERF_DPCM,
            #[cfg(feature = "ffmpeg_4_3")]
            i if i == AV_CODEC_ID_ACELP_KELVIN as u32 => Id::ACELP_KELVIN,
            #[cfg(feature = "ffmpeg_4_3")]
            i if i == AV_CODEC_ID_MPEGH_3D_AUDIO as u32 => Id::MPEGH_3D_AUDIO,
            #[cfg(feature = "ffmpeg_4_3")]
            i if i == AV_CODEC_ID_SIREN as u32 => Id::SIREN,
            #[cfg(feature = "ffmpeg_4_3")]
            i if i == AV_CODEC_ID_HCA as u32 => Id::HCA,
            #[cfg(feature = "ffmpeg_4_3")]
            i if i == AV_CODEC_ID_EPG as u32 => Id::EPG,

            #[cfg(feature = "ffmpeg_4_4")]
            i if i == AV_CODEC_ID_PGX as u32 => Id::PGX,
            #[cfg(feature = "ffmpeg_4_4")]
            i if i == AV_CODEC_ID_AVS3 as u32 => Id::AVS3,
            #[cfg(feature = "ffmpeg_4_4")]
            i if i == AV_CODEC_ID_MSP2 as u32 => Id::MSP2,
            #[cfg(feature = "ffmpeg_4_4")]
            i if i == AV_CODEC_ID_VVC as u32 => Id::VVC,
            #[cfg(feature = "ffmpeg_4_4")]
            i if i == AV_CODEC_ID_MOBICLIP as u32 => Id::MOBICLIP,
            #[cfg(feature = "ffmpeg_4_4")]
            i if i == AV_CODEC_ID_PHOTOCD as u32 => Id::PHOTOCD,
            #[cfg(feature = "ffmpeg_4_4")]
            i if i == AV_CODEC_ID_IPU as u32 => Id::IPU,
            #[cfg(feature = "ffmpeg_4_4")]
            i if i == AV_CODEC_ID_ARGO as u32 => Id::ARGO,
            #[cfg(feature = "ffmpeg_4_4")]
            i if i == AV_CODEC_ID_CRI as u32 => Id::CRI,
            #[cfg(feature = "ffmpeg_4_4")]
            i if i == AV_CODEC_ID_SIMBIOSIS_IMX as u32 => Id::SIMBIOSIS_IMX,
            #[cfg(feature = "ffmpeg_4_4")]
            i if i == AV_CODEC_ID_SGA_VIDEO as u32 => Id::SGA_VIDEO,
            #[cfg(feature = "ffmpeg_4_4")]
            i if i == AV_CODEC_ID_PCM_SGA as u32 => Id::PCM_SGA,
            #[cfg(feature = "ffmpeg_4_4")]
            i if i == AV_CODEC_ID_ADPCM_IMA_MOFLEX as u32 => Id::ADPCM_IMA_MOFLEX,
            #[cfg(feature = "ffmpeg_4_4")]
            i if i == AV_CODEC_ID_FASTAUDIO as u32 => Id::FASTAUDIO,
            #[cfg(feature = "ffmpeg_5_0")]
            i if i == AV_CODEC_ID_GEM as u32 => Id::GEM,
            #[cfg(feature = "ffmpeg_5_0")]
            i if i == AV_CODEC_ID_ADPCM_IMA_ACORN as u32 => Id::ADPCM_IMA_ACORN,
            #[cfg(feature = "ffmpeg_5_0")]
            i if i == AV_CODEC_ID_MSNSIREN as u32 => Id::MSNSIREN,
            #[cfg(feature = "ffmpeg_5_1")]
            i if i == AV_CODEC_ID_VBN as u32 => Id::VBN,
            #[cfg(feature = "ffmpeg_5_1")]
            i if i == AV_CODEC_ID_JPEGXL as u32 => Id::JPEGXL,
            #[cfg(feature = "ffmpeg_5_1")]
            i if i == AV_CODEC_ID_QOI as u32 => Id::QOI,
            #[cfg(feature = "ffmpeg_5_1")]
            i if i == AV_CODEC_ID_PHM as u32 => Id::PHM,
            #[cfg(feature = "ffmpeg_5_1")]
            i if i == AV_CODEC_ID_DFPWM as u32 => Id::DFPWM,

            #[cfg(feature = "ffmpeg_6_0")]
            i if i == AV_CODEC_ID_RADIANCE_HDR as u32 => Id::RADIANCE_HDR,
            #[cfg(feature = "ffmpeg_6_0")]
            i if i == AV_CODEC_ID_WBMP as u32 => Id::WBMP,
            #[cfg(feature = "ffmpeg_6_0")]
            i if i == AV_CODEC_ID_MEDIA100 as u32 => Id::MEDIA100,
            #[cfg(feature = "ffmpeg_6_0")]
            i if i == AV_CODEC_ID_VQC as u32 => Id::VQC,
            #[cfg(feature = "ffmpeg_6_0")]
            i if i == AV_CODEC_ID_ADPCM_XMD as u32 => Id::ADPCM_XMD,
            #[cfg(feature = "ffmpeg_6_0")]
            i if i == AV_CODEC_ID_WADY_DPCM as u32 => Id::WADY_DPCM,
            #[cfg(feature = "ffmpeg_6_0")]
            i if i == AV_CODEC_ID_CBD2_DPCM => Id::CBD2_DPCM,
            #[cfg(feature = "ffmpeg_6_0")]
            i if i == AV_CODEC_ID_BONK => Id::BONK,
            #[cfg(feature = "ffmpeg_6_0")]
            i if i == AV_CODEC_ID_MISC4 => Id::MISC4,
            #[cfg(feature = "ffmpeg_6_0")]
            i if i == AV_CODEC_ID_APAC => Id::APAC,
            #[cfg(feature = "ffmpeg_6_0")]
            i if i == AV_CODEC_ID_FTR => Id::FTR,
            #[cfg(feature = "ffmpeg_6_0")]
            i if i == AV_CODEC_ID_WAVARC => Id::WAVARC,
            #[cfg(feature = "ffmpeg_6_0")]
            i if i == AV_CODEC_ID_RKA => Id::RKA,
            #[cfg(feature = "ffmpeg_6_0")]
            i if i == AV_CODEC_ID_VNULL => Id::VNULL,
            #[cfg(feature = "ffmpeg_6_0")]
            i if i == AV_CODEC_ID_ANULL => Id::ANULL,
            _ => Id::None,
        }
    }
}

impl From<Id> for u32 {
    fn from(value: Id) -> u32 {
        match value {
            Id::None => AV_CODEC_ID_NONE as u32,

            /* video codecs */
            Id::MPEG1VIDEO => AV_CODEC_ID_MPEG1VIDEO as u32,
            Id::MPEG2VIDEO => AV_CODEC_ID_MPEG2VIDEO as u32,
            #[cfg(all(feature = "ff_api_xvmc", not(feature = "ffmpeg_5_0")))]
            Id::MPEG2VIDEO_XVMC => AV_CODEC_ID_MPEG2VIDEO_XVMC as u32,
            Id::H261 => AV_CODEC_ID_H261 as u32,
            Id::H263 => AV_CODEC_ID_H263 as u32,
            Id::RV10 => AV_CODEC_ID_RV10 as u32,
            Id::RV20 => AV_CODEC_ID_RV20 as u32,
            Id::MJPEG => AV_CODEC_ID_MJPEG as u32,
            Id::MJPEGB => AV_CODEC_ID_MJPEGB as u32,
            Id::LJPEG => AV_CODEC_ID_LJPEG as u32,
            Id::SP5X => AV_CODEC_ID_SP5X as u32,
            Id::JPEGLS => AV_CODEC_ID_JPEGLS as u32,
            Id::MPEG4 => AV_CODEC_ID_MPEG4 as u32,
            Id::RAWVIDEO => AV_CODEC_ID_RAWVIDEO as u32,
            Id::MSMPEG4V1 => AV_CODEC_ID_MSMPEG4V1 as u32,
            Id::MSMPEG4V2 => AV_CODEC_ID_MSMPEG4V2 as u32,
            Id::MSMPEG4V3 => AV_CODEC_ID_MSMPEG4V3 as u32,
            Id::WMV1 => AV_CODEC_ID_WMV1 as u32,
            Id::WMV2 => AV_CODEC_ID_WMV2 as u32,
            Id::H263P => AV_CODEC_ID_H263P as u32,
            Id::H263I => AV_CODEC_ID_H263I as u32,
            Id::FLV1 => AV_CODEC_ID_FLV1 as u32,
            Id::SVQ1 => AV_CODEC_ID_SVQ1 as u32,
            Id::SVQ3 => AV_CODEC_ID_SVQ3 as u32,
            Id::DVVIDEO => AV_CODEC_ID_DVVIDEO as u32,
            Id::HUFFYUV => AV_CODEC_ID_HUFFYUV as u32,
            Id::CYUV => AV_CODEC_ID_CYUV as u32,
            Id::H264 => AV_CODEC_ID_H264 as u32,
            Id::INDEO3 => AV_CODEC_ID_INDEO3 as u32,
            Id::VP3 => AV_CODEC_ID_VP3 as u32,
            Id::THEORA => AV_CODEC_ID_THEORA as u32,
            Id::ASV1 => AV_CODEC_ID_ASV1 as u32,
            Id::ASV2 => AV_CODEC_ID_ASV2 as u32,
            Id::FFV1 => AV_CODEC_ID_FFV1 as u32,
            Id::XM4 => AV_CODEC_ID_4XM as u32,
            Id::VCR1 => AV_CODEC_ID_VCR1 as u32,
            Id::CLJR => AV_CODEC_ID_CLJR as u32,
            Id::MDEC => AV_CODEC_ID_MDEC as u32,
            Id::ROQ => AV_CODEC_ID_ROQ as u32,
            Id::INTERPLAY_VIDEO => AV_CODEC_ID_INTERPLAY_VIDEO as u32,
            Id::XAN_WC3 => AV_CODEC_ID_XAN_WC3 as u32,
            Id::XAN_WC4 => AV_CODEC_ID_XAN_WC4 as u32,
            Id::RPZA => AV_CODEC_ID_RPZA as u32,
            Id::CINEPAK => AV_CODEC_ID_CINEPAK as u32,
            Id::WS_VQA => AV_CODEC_ID_WS_VQA as u32,
            Id::MSRLE => AV_CODEC_ID_MSRLE as u32,
            Id::MSVIDEO1 => AV_CODEC_ID_MSVIDEO1 as u32,
            Id::IDCIN => AV_CODEC_ID_IDCIN as u32,
            Id::BPS8 => AV_CODEC_ID_8BPS as u32,
            Id::SMC => AV_CODEC_ID_SMC as u32,
            Id::FLIC => AV_CODEC_ID_FLIC as u32,
            Id::TRUEMOTION1 => AV_CODEC_ID_TRUEMOTION1 as u32,
            Id::VMDVIDEO => AV_CODEC_ID_VMDVIDEO as u32,
            Id::MSZH => AV_CODEC_ID_MSZH as u32,
            Id::ZLIB => AV_CODEC_ID_ZLIB as u32,
            Id::QTRLE => AV_CODEC_ID_QTRLE as u32,
            Id::TSCC => AV_CODEC_ID_TSCC as u32,
            Id::ULTI => AV_CODEC_ID_ULTI as u32,
            Id::QDRAW => AV_CODEC_ID_QDRAW as u32,
            Id::VIXL => AV_CODEC_ID_VIXL as u32,
            Id::QPEG => AV_CODEC_ID_QPEG as u32,
            Id::PNG => AV_CODEC_ID_PNG as u32,
            Id::PPM => AV_CODEC_ID_PPM as u32,
            Id::PBM => AV_CODEC_ID_PBM as u32,
            Id::PGM => AV_CODEC_ID_PGM as u32,
            Id::PGMYUV => AV_CODEC_ID_PGMYUV as u32,
            Id::PAM => AV_CODEC_ID_PAM as u32,
            Id::FFVHUFF => AV_CODEC_ID_FFVHUFF as u32,
            Id::RV30 => AV_CODEC_ID_RV30 as u32,
            Id::RV40 => AV_CODEC_ID_RV40 as u32,
            Id::VC1 => AV_CODEC_ID_VC1 as u32,
            Id::WMV3 => AV_CODEC_ID_WMV3 as u32,
            Id::LOCO => AV_CODEC_ID_LOCO as u32,
            Id::WNV1 => AV_CODEC_ID_WNV1 as u32,
            Id::AASC => AV_CODEC_ID_AASC as u32,
            Id::INDEO2 => AV_CODEC_ID_INDEO2 as u32,
            Id::FRAPS => AV_CODEC_ID_FRAPS as u32,
            Id::TRUEMOTION2 => AV_CODEC_ID_TRUEMOTION2 as u32,
            Id::BMP => AV_CODEC_ID_BMP as u32,
            Id::CSCD => AV_CODEC_ID_CSCD as u32,
            Id::MMVIDEO => AV_CODEC_ID_MMVIDEO as u32,
            Id::ZMBV => AV_CODEC_ID_ZMBV as u32,
            Id::AVS => AV_CODEC_ID_AVS as u32,
            Id::SMACKVIDEO => AV_CODEC_ID_SMACKVIDEO as u32,
            Id::NUV => AV_CODEC_ID_NUV as u32,
            Id::KMVC => AV_CODEC_ID_KMVC as u32,
            Id::FLASHSV => AV_CODEC_ID_FLASHSV as u32,
            Id::CAVS => AV_CODEC_ID_CAVS as u32,
            Id::JPEG2000 => AV_CODEC_ID_JPEG2000 as u32,
            Id::VMNC => AV_CODEC_ID_VMNC as u32,
            Id::VP5 => AV_CODEC_ID_VP5 as u32,
            Id::VP6 => AV_CODEC_ID_VP6 as u32,
            Id::VP6F => AV_CODEC_ID_VP6F as u32,
            Id::TARGA => AV_CODEC_ID_TARGA as u32,
            Id::DSICINVIDEO => AV_CODEC_ID_DSICINVIDEO as u32,
            Id::TIERTEXSEQVIDEO => AV_CODEC_ID_TIERTEXSEQVIDEO as u32,
            Id::TIFF => AV_CODEC_ID_TIFF as u32,
            Id::GIF => AV_CODEC_ID_GIF as u32,
            Id::DXA => AV_CODEC_ID_DXA as u32,
            Id::DNXHD => AV_CODEC_ID_DNXHD as u32,
            Id::THP => AV_CODEC_ID_THP as u32,
            Id::SGI => AV_CODEC_ID_SGI as u32,
            Id::C93 => AV_CODEC_ID_C93 as u32,
            Id::BETHSOFTVID => AV_CODEC_ID_BETHSOFTVID as u32,
            Id::PTX => AV_CODEC_ID_PTX as u32,
            Id::TXD => AV_CODEC_ID_TXD as u32,
            Id::VP6A => AV_CODEC_ID_VP6A as u32,
            Id::AMV => AV_CODEC_ID_AMV as u32,
            Id::VB => AV_CODEC_ID_VB as u32,
            Id::PCX => AV_CODEC_ID_PCX as u32,
            Id::SUNRAST => AV_CODEC_ID_SUNRAST as u32,
            Id::INDEO4 => AV_CODEC_ID_INDEO4 as u32,
            Id::INDEO5 => AV_CODEC_ID_INDEO5 as u32,
            Id::MIMIC => AV_CODEC_ID_MIMIC as u32,
            Id::RL2 => AV_CODEC_ID_RL2 as u32,
            Id::ESCAPE124 => AV_CODEC_ID_ESCAPE124 as u32,
            Id::DIRAC => AV_CODEC_ID_DIRAC as u32,
            Id::BFI => AV_CODEC_ID_BFI as u32,
            Id::CMV => AV_CODEC_ID_CMV as u32,
            Id::MOTIONPIXELS => AV_CODEC_ID_MOTIONPIXELS as u32,
            Id::TGV => AV_CODEC_ID_TGV as u32,
            Id::TGQ => AV_CODEC_ID_TGQ as u32,
            Id::TQI => AV_CODEC_ID_TQI as u32,
            Id::AURA => AV_CODEC_ID_AURA as u32,
            Id::AURA2 => AV_CODEC_ID_AURA2 as u32,
            Id::V210X => AV_CODEC_ID_V210X as u32,
            Id::TMV => AV_CODEC_ID_TMV as u32,
            Id::V210 => AV_CODEC_ID_V210 as u32,
            Id::DPX => AV_CODEC_ID_DPX as u32,
            Id::MAD => AV_CODEC_ID_MAD as u32,
            Id::FRWU => AV_CODEC_ID_FRWU as u32,
            Id::FLASHSV2 => AV_CODEC_ID_FLASHSV2 as u32,
            Id::CDGRAPHICS => AV_CODEC_ID_CDGRAPHICS as u32,
            Id::R210 => AV_CODEC_ID_R210 as u32,
            Id::ANM => AV_CODEC_ID_ANM as u32,
            Id::BINKVIDEO => AV_CODEC_ID_BINKVIDEO as u32,
            Id::IFF_ILBM => AV_CODEC_ID_IFF_ILBM as u32,
            Id::IFF_BYTERUN1 => AV_CODEC_ID_IFF_ILBM as u32,
            Id::KGV1 => AV_CODEC_ID_KGV1 as u32,
            Id::YOP => AV_CODEC_ID_YOP as u32,
            Id::VP8 => AV_CODEC_ID_VP8 as u32,
            Id::PICTOR => AV_CODEC_ID_PICTOR as u32,
            Id::ANSI => AV_CODEC_ID_ANSI as u32,
            Id::A64_MULTI => AV_CODEC_ID_A64_MULTI as u32,
            Id::A64_MULTI5 => AV_CODEC_ID_A64_MULTI5 as u32,
            Id::R10K => AV_CODEC_ID_R10K as u32,
            Id::MXPEG => AV_CODEC_ID_MXPEG as u32,
            Id::LAGARITH => AV_CODEC_ID_LAGARITH as u32,
            Id::PRORES => AV_CODEC_ID_PRORES as u32,
            Id::JV => AV_CODEC_ID_JV as u32,
            Id::DFA => AV_CODEC_ID_DFA as u32,
            Id::WMV3IMAGE => AV_CODEC_ID_WMV3IMAGE as u32,
            Id::VC1IMAGE => AV_CODEC_ID_VC1IMAGE as u32,
            Id::UTVIDEO => AV_CODEC_ID_UTVIDEO as u32,
            Id::BMV_VIDEO => AV_CODEC_ID_BMV_VIDEO as u32,
            Id::VBLE => AV_CODEC_ID_VBLE as u32,
            Id::DXTORY => AV_CODEC_ID_DXTORY as u32,
            Id::V410 => AV_CODEC_ID_V410 as u32,
            Id::XWD => AV_CODEC_ID_XWD as u32,
            Id::CDXL => AV_CODEC_ID_CDXL as u32,
            Id::XBM => AV_CODEC_ID_XBM as u32,
            Id::ZEROCODEC => AV_CODEC_ID_ZEROCODEC as u32,
            Id::MSS1 => AV_CODEC_ID_MSS1 as u32,
            Id::MSA1 => AV_CODEC_ID_MSA1 as u32,
            Id::TSCC2 => AV_CODEC_ID_TSCC2 as u32,
            Id::MTS2 => AV_CODEC_ID_MTS2 as u32,
            Id::CLLC => AV_CODEC_ID_CLLC as u32,
            Id::MSS2 => AV_CODEC_ID_MSS2 as u32,
            Id::VP9 => AV_CODEC_ID_VP9 as u32,
            Id::AIC => AV_CODEC_ID_AIC as u32,
            Id::ESCAPE130 => AV_CODEC_ID_ESCAPE130 as u32,
            Id::G2M => AV_CODEC_ID_G2M as u32,
            Id::WEBP => AV_CODEC_ID_WEBP as u32,
            Id::HNM4_VIDEO => AV_CODEC_ID_HNM4_VIDEO as u32,
            Id::HEVC => AV_CODEC_ID_HEVC as u32,
            Id::H265 => AV_CODEC_ID_HEVC as u32,
            Id::FIC => AV_CODEC_ID_FIC as u32,
            Id::ALIAS_PIX => AV_CODEC_ID_ALIAS_PIX as u32,
            Id::BRENDER_PIX => AV_CODEC_ID_BRENDER_PIX as u32,
            Id::PAF_VIDEO => AV_CODEC_ID_PAF_VIDEO as u32,
            Id::EXR => AV_CODEC_ID_EXR as u32,
            Id::VP7 => AV_CODEC_ID_VP7 as u32,
            Id::SANM => AV_CODEC_ID_SANM as u32,
            Id::SGIRLE => AV_CODEC_ID_SGIRLE as u32,
            Id::MVC1 => AV_CODEC_ID_MVC1 as u32,
            Id::MVC2 => AV_CODEC_ID_MVC2 as u32,
            Id::HQX => AV_CODEC_ID_HQX as u32,
            Id::TDSC => AV_CODEC_ID_TDSC as u32,
            Id::HQ_HQA => AV_CODEC_ID_HQ_HQA as u32,
            Id::HAP => AV_CODEC_ID_HAP as u32,
            Id::DDS => AV_CODEC_ID_DDS as u32,
            Id::DXV => AV_CODEC_ID_DXV as u32,
            Id::SCREENPRESSO => AV_CODEC_ID_SCREENPRESSO as u32,
            Id::RSCC => AV_CODEC_ID_RSCC as u32,

            Id::Y41P => AV_CODEC_ID_Y41P as u32,
            Id::AVRP => AV_CODEC_ID_AVRP as u32,
            Id::V012 => AV_CODEC_ID_012V as u32,
            Id::AVUI => AV_CODEC_ID_AVUI as u32,
            Id::AYUV => AV_CODEC_ID_AYUV as u32,
            Id::TARGA_Y216 => AV_CODEC_ID_TARGA_Y216 as u32,
            Id::V308 => AV_CODEC_ID_V308 as u32,
            Id::V408 => AV_CODEC_ID_V408 as u32,
            Id::YUV4 => AV_CODEC_ID_YUV4 as u32,
            Id::AVRN => AV_CODEC_ID_AVRN as u32,
            Id::CPIA => AV_CODEC_ID_CPIA as u32,
            Id::XFACE => AV_CODEC_ID_XFACE as u32,
            Id::SNOW => AV_CODEC_ID_SNOW as u32,
            Id::SMVJPEG => AV_CODEC_ID_SMVJPEG as u32,
            Id::APNG => AV_CODEC_ID_APNG as u32,
            Id::DAALA => AV_CODEC_ID_DAALA as u32,
            Id::CFHD => AV_CODEC_ID_CFHD as u32,
            Id::TRUEMOTION2RT => AV_CODEC_ID_TRUEMOTION2RT as u32,
            Id::M101 => AV_CODEC_ID_M101 as u32,
            Id::MAGICYUV => AV_CODEC_ID_MAGICYUV as u32,
            Id::SHEERVIDEO => AV_CODEC_ID_SHEERVIDEO as u32,
            Id::YLC => AV_CODEC_ID_YLC as u32,

            /* various PCM "codecs" */
            Id::PCM_S16LE => AV_CODEC_ID_PCM_S16LE as u32,
            Id::PCM_S16BE => AV_CODEC_ID_PCM_S16BE as u32,
            Id::PCM_U16LE => AV_CODEC_ID_PCM_U16LE as u32,
            Id::PCM_U16BE => AV_CODEC_ID_PCM_U16BE as u32,
            Id::PCM_S8 => AV_CODEC_ID_PCM_S8 as u32,
            Id::PCM_U8 => AV_CODEC_ID_PCM_U8 as u32,
            Id::PCM_MULAW => AV_CODEC_ID_PCM_MULAW as u32,
            Id::PCM_ALAW => AV_CODEC_ID_PCM_ALAW as u32,
            Id::PCM_S32LE => AV_CODEC_ID_PCM_S32LE as u32,
            Id::PCM_S32BE => AV_CODEC_ID_PCM_S32BE as u32,
            Id::PCM_U32LE => AV_CODEC_ID_PCM_U32LE as u32,
            Id::PCM_U32BE => AV_CODEC_ID_PCM_U32BE as u32,
            Id::PCM_S24LE => AV_CODEC_ID_PCM_S24LE as u32,
            Id::PCM_S24BE => AV_CODEC_ID_PCM_S24BE as u32,
            Id::PCM_U24LE => AV_CODEC_ID_PCM_U24LE as u32,
            Id::PCM_U24BE => AV_CODEC_ID_PCM_U24BE as u32,
            Id::PCM_S24DAUD => AV_CODEC_ID_PCM_S24DAUD as u32,
            Id::PCM_ZORK => AV_CODEC_ID_PCM_ZORK as u32,
            Id::PCM_S16LE_PLANAR => AV_CODEC_ID_PCM_S16LE_PLANAR as u32,
            Id::PCM_DVD => AV_CODEC_ID_PCM_DVD as u32,
            Id::PCM_F32BE => AV_CODEC_ID_PCM_F32BE as u32,
            Id::PCM_F32LE => AV_CODEC_ID_PCM_F32LE as u32,
            Id::PCM_F64BE => AV_CODEC_ID_PCM_F64BE as u32,
            Id::PCM_F64LE => AV_CODEC_ID_PCM_F64LE as u32,
            Id::PCM_BLURAY => AV_CODEC_ID_PCM_BLURAY as u32,
            Id::PCM_LXF => AV_CODEC_ID_PCM_LXF as u32,
            Id::S302M => AV_CODEC_ID_S302M as u32,
            Id::PCM_S8_PLANAR => AV_CODEC_ID_PCM_S8_PLANAR as u32,
            Id::PCM_S24LE_PLANAR => AV_CODEC_ID_PCM_S24LE_PLANAR as u32,
            Id::PCM_S32LE_PLANAR => AV_CODEC_ID_PCM_S32LE_PLANAR as u32,
            Id::PCM_S16BE_PLANAR => AV_CODEC_ID_PCM_S16BE_PLANAR as u32,

            Id::PCM_S64LE => AV_CODEC_ID_PCM_S64LE as u32,
            Id::PCM_S64BE => AV_CODEC_ID_PCM_S64BE as u32,

            /* various ADPCM codecs */
            Id::ADPCM_IMA_QT => AV_CODEC_ID_ADPCM_IMA_QT as u32,
            Id::ADPCM_IMA_WAV => AV_CODEC_ID_ADPCM_IMA_WAV as u32,
            Id::ADPCM_IMA_DK3 => AV_CODEC_ID_ADPCM_IMA_DK3 as u32,
            Id::ADPCM_IMA_DK4 => AV_CODEC_ID_ADPCM_IMA_DK4 as u32,
            Id::ADPCM_IMA_WS => AV_CODEC_ID_ADPCM_IMA_WS as u32,
            Id::ADPCM_IMA_SMJPEG => AV_CODEC_ID_ADPCM_IMA_SMJPEG as u32,
            Id::ADPCM_MS => AV_CODEC_ID_ADPCM_MS as u32,
            Id::ADPCM_4XM => AV_CODEC_ID_ADPCM_4XM as u32,
            Id::ADPCM_XA => AV_CODEC_ID_ADPCM_XA as u32,
            Id::ADPCM_ADX => AV_CODEC_ID_ADPCM_ADX as u32,
            Id::ADPCM_EA => AV_CODEC_ID_ADPCM_EA as u32,
            Id::ADPCM_G726 => AV_CODEC_ID_ADPCM_G726 as u32,
            Id::ADPCM_CT => AV_CODEC_ID_ADPCM_CT as u32,
            Id::ADPCM_SWF => AV_CODEC_ID_ADPCM_SWF as u32,
            Id::ADPCM_YAMAHA => AV_CODEC_ID_ADPCM_YAMAHA as u32,
            Id::ADPCM_SBPRO_4 => AV_CODEC_ID_ADPCM_SBPRO_4 as u32,
            Id::ADPCM_SBPRO_3 => AV_CODEC_ID_ADPCM_SBPRO_3 as u32,
            Id::ADPCM_SBPRO_2 => AV_CODEC_ID_ADPCM_SBPRO_2 as u32,
            Id::ADPCM_THP => AV_CODEC_ID_ADPCM_THP as u32,
            Id::ADPCM_IMA_AMV => AV_CODEC_ID_ADPCM_IMA_AMV as u32,
            Id::ADPCM_EA_R1 => AV_CODEC_ID_ADPCM_EA_R1 as u32,
            Id::ADPCM_EA_R3 => AV_CODEC_ID_ADPCM_EA_R3 as u32,
            Id::ADPCM_EA_R2 => AV_CODEC_ID_ADPCM_EA_R2 as u32,
            Id::ADPCM_IMA_EA_SEAD => AV_CODEC_ID_ADPCM_IMA_EA_SEAD as u32,
            Id::ADPCM_IMA_EA_EACS => AV_CODEC_ID_ADPCM_IMA_EA_EACS as u32,
            Id::ADPCM_EA_XAS => AV_CODEC_ID_ADPCM_EA_XAS as u32,
            Id::ADPCM_EA_MAXIS_XA => AV_CODEC_ID_ADPCM_EA_MAXIS_XA as u32,
            Id::ADPCM_IMA_ISS => AV_CODEC_ID_ADPCM_IMA_ISS as u32,
            Id::ADPCM_G722 => AV_CODEC_ID_ADPCM_G722 as u32,
            Id::ADPCM_IMA_APC => AV_CODEC_ID_ADPCM_IMA_APC as u32,
            Id::ADPCM_VIMA => AV_CODEC_ID_ADPCM_VIMA as u32,

            Id::ADPCM_AFC => AV_CODEC_ID_ADPCM_AFC as u32,
            Id::ADPCM_IMA_OKI => AV_CODEC_ID_ADPCM_IMA_OKI as u32,
            Id::ADPCM_DTK => AV_CODEC_ID_ADPCM_DTK as u32,
            Id::ADPCM_IMA_RAD => AV_CODEC_ID_ADPCM_IMA_RAD as u32,
            Id::ADPCM_G726LE => AV_CODEC_ID_ADPCM_G726LE as u32,
            Id::ADPCM_THP_LE => AV_CODEC_ID_ADPCM_THP_LE as u32,
            Id::ADPCM_PSX => AV_CODEC_ID_ADPCM_PSX as u32,
            Id::ADPCM_AICA => AV_CODEC_ID_ADPCM_AICA as u32,
            Id::ADPCM_IMA_DAT4 => AV_CODEC_ID_ADPCM_IMA_DAT4 as u32,
            Id::ADPCM_MTAF => AV_CODEC_ID_ADPCM_MTAF as u32,

            /* AMR */
            Id::AMR_NB => AV_CODEC_ID_AMR_NB as u32,
            Id::AMR_WB => AV_CODEC_ID_AMR_WB as u32,

            /* RealAudio codecs*/
            Id::RA_144 => AV_CODEC_ID_RA_144 as u32,
            Id::RA_288 => AV_CODEC_ID_RA_288 as u32,

            /* various DPCM codecs */
            Id::ROQ_DPCM => AV_CODEC_ID_ROQ_DPCM as u32,
            Id::INTERPLAY_DPCM => AV_CODEC_ID_INTERPLAY_DPCM as u32,
            Id::XAN_DPCM => AV_CODEC_ID_XAN_DPCM as u32,
            Id::SOL_DPCM => AV_CODEC_ID_SOL_DPCM as u32,

            Id::SDX2_DPCM => AV_CODEC_ID_SDX2_DPCM as u32,

            /* audio codecs */
            Id::MP2 => AV_CODEC_ID_MP2 as u32,
            Id::MP3 => AV_CODEC_ID_MP3 as u32,
            Id::AAC => AV_CODEC_ID_AAC as u32,
            Id::AC3 => AV_CODEC_ID_AC3 as u32,
            Id::DTS => AV_CODEC_ID_DTS as u32,
            Id::VORBIS => AV_CODEC_ID_VORBIS as u32,
            Id::DVAUDIO => AV_CODEC_ID_DVAUDIO as u32,
            Id::WMAV1 => AV_CODEC_ID_WMAV1 as u32,
            Id::WMAV2 => AV_CODEC_ID_WMAV2 as u32,
            Id::MACE3 => AV_CODEC_ID_MACE3 as u32,
            Id::MACE6 => AV_CODEC_ID_MACE6 as u32,
            Id::VMDAUDIO => AV_CODEC_ID_VMDAUDIO as u32,
            Id::FLAC => AV_CODEC_ID_FLAC as u32,
            Id::MP3ADU => AV_CODEC_ID_MP3ADU as u32,
            Id::MP3ON4 => AV_CODEC_ID_MP3ON4 as u32,
            Id::SHORTEN => AV_CODEC_ID_SHORTEN as u32,
            Id::ALAC => AV_CODEC_ID_ALAC as u32,
            Id::WESTWOOD_SND1 => AV_CODEC_ID_WESTWOOD_SND1 as u32,
            Id::GSM => AV_CODEC_ID_GSM as u32,
            Id::QDM2 => AV_CODEC_ID_QDM2 as u32,
            Id::COOK => AV_CODEC_ID_COOK as u32,
            Id::TRUESPEECH => AV_CODEC_ID_TRUESPEECH as u32,
            Id::TTA => AV_CODEC_ID_TTA as u32,
            Id::SMACKAUDIO => AV_CODEC_ID_SMACKAUDIO as u32,
            Id::QCELP => AV_CODEC_ID_QCELP as u32,
            Id::WAVPACK => AV_CODEC_ID_WAVPACK as u32,
            Id::DSICINAUDIO => AV_CODEC_ID_DSICINAUDIO as u32,
            Id::IMC => AV_CODEC_ID_IMC as u32,
            Id::MUSEPACK7 => AV_CODEC_ID_MUSEPACK7 as u32,
            Id::MLP => AV_CODEC_ID_MLP as u32,
            Id::GSM_MS => AV_CODEC_ID_GSM_MS as u32,
            Id::ATRAC3 => AV_CODEC_ID_ATRAC3 as u32,
            #[cfg(feature = "ff_api_voxware")]
            Id::VOXWARE => AV_CODEC_ID_VOXWARE as u32,
            Id::APE => AV_CODEC_ID_APE as u32,
            Id::NELLYMOSER => AV_CODEC_ID_NELLYMOSER as u32,
            Id::MUSEPACK8 => AV_CODEC_ID_MUSEPACK8 as u32,
            Id::SPEEX => AV_CODEC_ID_SPEEX as u32,
            Id::WMAVOICE => AV_CODEC_ID_WMAVOICE as u32,
            Id::WMAPRO => AV_CODEC_ID_WMAPRO as u32,
            Id::WMALOSSLESS => AV_CODEC_ID_WMALOSSLESS as u32,
            Id::ATRAC3P => AV_CODEC_ID_ATRAC3P as u32,
            Id::EAC3 => AV_CODEC_ID_EAC3 as u32,
            Id::SIPR => AV_CODEC_ID_SIPR as u32,
            Id::MP1 => AV_CODEC_ID_MP1 as u32,
            Id::TWINVQ => AV_CODEC_ID_TWINVQ as u32,
            Id::TRUEHD => AV_CODEC_ID_TRUEHD as u32,
            Id::MP4ALS => AV_CODEC_ID_MP4ALS as u32,
            Id::ATRAC1 => AV_CODEC_ID_ATRAC1 as u32,
            Id::BINKAUDIO_RDFT => AV_CODEC_ID_BINKAUDIO_RDFT as u32,
            Id::BINKAUDIO_DCT => AV_CODEC_ID_BINKAUDIO_DCT as u32,
            Id::AAC_LATM => AV_CODEC_ID_AAC_LATM as u32,
            Id::QDMC => AV_CODEC_ID_QDMC as u32,
            Id::CELT => AV_CODEC_ID_CELT as u32,
            Id::G723_1 => AV_CODEC_ID_G723_1 as u32,
            Id::G729 => AV_CODEC_ID_G729 as u32,
            Id::SVX_EXP8 => AV_CODEC_ID_8SVX_EXP as u32,
            Id::SVX_FIB8 => AV_CODEC_ID_8SVX_FIB as u32,
            Id::BMV_AUDIO => AV_CODEC_ID_BMV_AUDIO as u32,
            Id::RALF => AV_CODEC_ID_RALF as u32,
            Id::IAC => AV_CODEC_ID_IAC as u32,
            Id::ILBC => AV_CODEC_ID_ILBC as u32,
            Id::OPUS => AV_CODEC_ID_OPUS as u32,
            Id::COMFORT_NOISE => AV_CODEC_ID_COMFORT_NOISE as u32,
            Id::TAK => AV_CODEC_ID_TAK as u32,
            Id::METASOUND => AV_CODEC_ID_METASOUND as u32,
            Id::PAF_AUDIO => AV_CODEC_ID_PAF_AUDIO as u32,
            Id::ON2AVC => AV_CODEC_ID_ON2AVC as u32,
            Id::DSS_SP => AV_CODEC_ID_DSS_SP as u32,

            #[cfg(feature = "ffmpeg_4_0")]
            Id::CODEC2 => AV_CODEC_ID_CODEC2 as u32,
            Id::FFWAVESYNTH => AV_CODEC_ID_FFWAVESYNTH as u32,
            Id::SONIC => AV_CODEC_ID_SONIC as u32,
            Id::SONIC_LS => AV_CODEC_ID_SONIC_LS as u32,
            Id::EVRC => AV_CODEC_ID_EVRC as u32,
            Id::SMV => AV_CODEC_ID_SMV as u32,
            Id::DSD_LSBF => AV_CODEC_ID_DSD_LSBF as u32,
            Id::DSD_MSBF => AV_CODEC_ID_DSD_MSBF as u32,
            Id::DSD_LSBF_PLANAR => AV_CODEC_ID_DSD_LSBF_PLANAR as u32,
            Id::DSD_MSBF_PLANAR => AV_CODEC_ID_DSD_MSBF_PLANAR as u32,
            Id::_4GV => AV_CODEC_ID_4GV as u32,
            Id::INTERPLAY_ACM => AV_CODEC_ID_INTERPLAY_ACM as u32,
            Id::XMA1 => AV_CODEC_ID_XMA1 as u32,
            Id::XMA2 => AV_CODEC_ID_XMA2 as u32,
            Id::DST => AV_CODEC_ID_DST as u32,

            /* subtitle codecs */
            Id::DVD_SUBTITLE => AV_CODEC_ID_DVD_SUBTITLE as u32,
            Id::DVB_SUBTITLE => AV_CODEC_ID_DVB_SUBTITLE as u32,
            Id::TEXT => AV_CODEC_ID_TEXT as u32,
            Id::XSUB => AV_CODEC_ID_XSUB as u32,
            Id::SSA => AV_CODEC_ID_SSA as u32,
            Id::MOV_TEXT => AV_CODEC_ID_MOV_TEXT as u32,
            Id::HDMV_PGS_SUBTITLE => AV_CODEC_ID_HDMV_PGS_SUBTITLE as u32,
            Id::DVB_TELETEXT => AV_CODEC_ID_DVB_TELETEXT as u32,
            Id::SRT => AV_CODEC_ID_SRT as u32,

            Id::MICRODVD => AV_CODEC_ID_MICRODVD as u32,
            Id::EIA_608 => AV_CODEC_ID_EIA_608 as u32,
            Id::JACOSUB => AV_CODEC_ID_JACOSUB as u32,
            Id::SAMI => AV_CODEC_ID_SAMI as u32,
            Id::REALTEXT => AV_CODEC_ID_REALTEXT as u32,
            Id::STL => AV_CODEC_ID_STL as u32,
            Id::SUBVIEWER1 => AV_CODEC_ID_SUBVIEWER1 as u32,
            Id::SUBVIEWER => AV_CODEC_ID_SUBVIEWER as u32,
            Id::SUBRIP => AV_CODEC_ID_SUBRIP as u32,
            Id::WEBVTT => AV_CODEC_ID_WEBVTT as u32,
            Id::MPL2 => AV_CODEC_ID_MPL2 as u32,
            Id::VPLAYER => AV_CODEC_ID_VPLAYER as u32,
            Id::PJS => AV_CODEC_ID_PJS as u32,
            Id::ASS => AV_CODEC_ID_ASS as u32,
            Id::HDMV_TEXT_SUBTITLE => AV_CODEC_ID_HDMV_TEXT_SUBTITLE as u32,

            /* other specific kind of codecs (generally used for attachments) */
            Id::TTF => AV_CODEC_ID_TTF as u32,

            Id::SCTE_35 => AV_CODEC_ID_SCTE_35 as u32,
            Id::BINTEXT => AV_CODEC_ID_BINTEXT as u32,
            Id::XBIN => AV_CODEC_ID_XBIN as u32,
            Id::IDF => AV_CODEC_ID_IDF as u32,
            Id::OTF => AV_CODEC_ID_OTF as u32,
            Id::SMPTE_KLV => AV_CODEC_ID_SMPTE_KLV as u32,
            Id::DVD_NAV => AV_CODEC_ID_DVD_NAV as u32,
            Id::TIMED_ID3 => AV_CODEC_ID_TIMED_ID3 as u32,
            Id::BIN_DATA => AV_CODEC_ID_BIN_DATA as u32,

            Id::PROBE => AV_CODEC_ID_PROBE as u32,

            Id::MPEG2TS => AV_CODEC_ID_MPEG2TS as u32,
            Id::MPEG4SYSTEMS => AV_CODEC_ID_MPEG4SYSTEMS as u32,
            Id::FFMETADATA => AV_CODEC_ID_FFMETADATA as u32,
            Id::WRAPPED_AVFRAME => AV_CODEC_ID_WRAPPED_AVFRAME as u32,

            Id::PSD => AV_CODEC_ID_PSD as u32,
            Id::PIXLET => AV_CODEC_ID_PIXLET as u32,
            Id::SPEEDHQ => AV_CODEC_ID_SPEEDHQ as u32,
            Id::FMVC => AV_CODEC_ID_FMVC as u32,
            Id::CLEARVIDEO => AV_CODEC_ID_CLEARVIDEO as u32,
            Id::SCPR => AV_CODEC_ID_SCPR as u32,
            Id::XPM => AV_CODEC_ID_XPM as u32,
            Id::AV1 => AV_CODEC_ID_AV1 as u32,
            Id::PCM_F16LE => AV_CODEC_ID_PCM_F16LE as u32,
            Id::PCM_F24LE => AV_CODEC_ID_PCM_F24LE as u32,
            Id::ATRAC3AL => AV_CODEC_ID_ATRAC3AL as u32,
            Id::ATRAC3PAL => AV_CODEC_ID_ATRAC3PAL as u32,

            Id::BITPACKED => AV_CODEC_ID_BITPACKED as u32,
            Id::MSCC => AV_CODEC_ID_MSCC as u32,
            Id::SRGC => AV_CODEC_ID_SRGC as u32,
            Id::SVG => AV_CODEC_ID_SVG as u32,
            Id::GDV => AV_CODEC_ID_GDV as u32,
            Id::FITS => AV_CODEC_ID_FITS as u32,
            Id::GREMLIN_DPCM => AV_CODEC_ID_GREMLIN_DPCM as u32,
            Id::DOLBY_E => AV_CODEC_ID_DOLBY_E as u32,

            #[cfg(feature = "ffmpeg_4_0")]
            Id::APTX => AV_CODEC_ID_APTX as u32,
            #[cfg(feature = "ffmpeg_4_0")]
            Id::APTX_HD => AV_CODEC_ID_APTX_HD as u32,
            #[cfg(feature = "ffmpeg_4_0")]
            Id::SBC => AV_CODEC_ID_SBC as u32,

            #[cfg(feature = "ffmpeg_4_1")]
            Id::AVS2 => AV_CODEC_ID_AVS2 as u32,
            #[cfg(feature = "ffmpeg_4_1")]
            Id::IMM4 => AV_CODEC_ID_IMM4 as u32,
            #[cfg(feature = "ffmpeg_4_1")]
            Id::PROSUMER => AV_CODEC_ID_PROSUMER as u32,
            #[cfg(feature = "ffmpeg_4_1")]
            Id::MWSC => AV_CODEC_ID_MWSC as u32,
            #[cfg(feature = "ffmpeg_4_1")]
            Id::WCMV => AV_CODEC_ID_WCMV as u32,
            #[cfg(feature = "ffmpeg_4_1")]
            Id::RASC => AV_CODEC_ID_RASC as u32,
            #[cfg(feature = "ffmpeg_4_1")]
            Id::PCM_VIDC => AV_CODEC_ID_PCM_VIDC as u32,
            #[cfg(feature = "ffmpeg_4_1")]
            Id::ATRAC9 => AV_CODEC_ID_ATRAC9 as u32,
            #[cfg(feature = "ffmpeg_4_1")]
            Id::TTML => AV_CODEC_ID_TTML as u32,

            #[cfg(feature = "ffmpeg_4_2")]
            Id::HYMT => AV_CODEC_ID_HYMT as u32,
            #[cfg(feature = "ffmpeg_4_2")]
            Id::ARBC => AV_CODEC_ID_ARBC as u32,
            #[cfg(feature = "ffmpeg_4_2")]
            Id::AGM => AV_CODEC_ID_AGM as u32,
            #[cfg(feature = "ffmpeg_4_2")]
            Id::LSCR => AV_CODEC_ID_LSCR as u32,
            #[cfg(feature = "ffmpeg_4_2")]
            Id::VP4 => AV_CODEC_ID_VP4 as u32,
            #[cfg(feature = "ffmpeg_4_2")]
            Id::ADPCM_AGM => AV_CODEC_ID_ADPCM_AGM as u32,
            #[cfg(feature = "ffmpeg_4_2")]
            Id::HCOM => AV_CODEC_ID_HCOM as u32,
            #[cfg(feature = "ffmpeg_4_2")]
            Id::ARIB_CAPTION => AV_CODEC_ID_ARIB_CAPTION as u32,

            #[cfg(feature = "ffmpeg_4_3")]
            Id::IMM5 => AV_CODEC_ID_IMM5 as u32,
            #[cfg(feature = "ffmpeg_4_3")]
            Id::MVDV => AV_CODEC_ID_MVDV as u32,
            #[cfg(feature = "ffmpeg_4_3")]
            Id::MVHA => AV_CODEC_ID_MVHA as u32,
            #[cfg(feature = "ffmpeg_4_3")]
            Id::CDTOONS => AV_CODEC_ID_CDTOONS as u32,
            #[cfg(feature = "ffmpeg_4_3")]
            Id::MV30 => AV_CODEC_ID_MV30 as u32,
            #[cfg(feature = "ffmpeg_4_3")]
            Id::NOTCHLC => AV_CODEC_ID_NOTCHLC as u32,
            #[cfg(feature = "ffmpeg_4_3")]
            Id::PFM => AV_CODEC_ID_PFM as u32,
            #[cfg(feature = "ffmpeg_4_3")]
            Id::ADPCM_ARGO => AV_CODEC_ID_ADPCM_ARGO as u32,
            #[cfg(feature = "ffmpeg_4_3")]
            Id::ADPCM_IMA_SSI => AV_CODEC_ID_ADPCM_IMA_SSI as u32,
            #[cfg(feature = "ffmpeg_4_3")]
            Id::ADPCM_ZORK => AV_CODEC_ID_ADPCM_ZORK as u32,
            #[cfg(feature = "ffmpeg_4_3")]
            Id::ADPCM_IMA_APM => AV_CODEC_ID_ADPCM_IMA_APM as u32,
            #[cfg(feature = "ffmpeg_4_3")]
            Id::ADPCM_IMA_ALP => AV_CODEC_ID_ADPCM_IMA_ALP as u32,
            #[cfg(feature = "ffmpeg_4_3")]
            Id::ADPCM_IMA_MTF => AV_CODEC_ID_ADPCM_IMA_MTF as u32,
            #[cfg(feature = "ffmpeg_4_3")]
            Id::ADPCM_IMA_CUNNING => AV_CODEC_ID_ADPCM_IMA_CUNNING as u32,
            #[cfg(feature = "ffmpeg_4_3")]
            Id::DERF_DPCM => AV_CODEC_ID_DERF_DPCM as u32,
            #[cfg(feature = "ffmpeg_4_3")]
            Id::ACELP_KELVIN => AV_CODEC_ID_ACELP_KELVIN as u32,
            #[cfg(feature = "ffmpeg_4_3")]
            Id::MPEGH_3D_AUDIO => AV_CODEC_ID_MPEGH_3D_AUDIO as u32,
            #[cfg(feature = "ffmpeg_4_3")]
            Id::SIREN => AV_CODEC_ID_SIREN as u32,
            #[cfg(feature = "ffmpeg_4_3")]
            Id::HCA => AV_CODEC_ID_HCA as u32,
            #[cfg(feature = "ffmpeg_4_3")]
            Id::EPG => AV_CODEC_ID_EPG as u32,

            #[cfg(feature = "ffmpeg_4_4")]
            Id::PGX => AV_CODEC_ID_PGX as u32,
            #[cfg(feature = "ffmpeg_4_4")]
            Id::AVS3 => AV_CODEC_ID_AVS3 as u32,
            #[cfg(feature = "ffmpeg_4_4")]
            Id::MSP2 => AV_CODEC_ID_MSP2 as u32,
            #[cfg(feature = "ffmpeg_4_4")]
            Id::VVC => AV_CODEC_ID_VVC as u32,
            #[cfg(feature = "ffmpeg_4_4")]
            Id::MOBICLIP => AV_CODEC_ID_MOBICLIP as u32,
            #[cfg(feature = "ffmpeg_4_4")]
            Id::PHOTOCD => AV_CODEC_ID_PHOTOCD as u32,
            #[cfg(feature = "ffmpeg_4_4")]
            Id::IPU => AV_CODEC_ID_IPU as u32,
            #[cfg(feature = "ffmpeg_4_4")]
            Id::ARGO => AV_CODEC_ID_ARGO as u32,
            #[cfg(feature = "ffmpeg_4_4")]
            Id::CRI => AV_CODEC_ID_CRI as u32,
            #[cfg(feature = "ffmpeg_4_4")]
            Id::SIMBIOSIS_IMX => AV_CODEC_ID_SIMBIOSIS_IMX as u32,
            #[cfg(feature = "ffmpeg_4_4")]
            Id::SGA_VIDEO => AV_CODEC_ID_SGA_VIDEO as u32,
            #[cfg(feature = "ffmpeg_4_4")]
            Id::PCM_SGA => AV_CODEC_ID_PCM_SGA as u32,
            #[cfg(feature = "ffmpeg_4_4")]
            Id::ADPCM_IMA_MOFLEX => AV_CODEC_ID_ADPCM_IMA_MOFLEX as u32,
            #[cfg(feature = "ffmpeg_4_4")]
            Id::FASTAUDIO => AV_CODEC_ID_FASTAUDIO as u32,

            #[cfg(feature = "ffmpeg_5_0")]
            Id::GEM => AV_CODEC_ID_GEM as u32,
            #[cfg(feature = "ffmpeg_5_0")]
            Id::ADPCM_IMA_ACORN => AV_CODEC_ID_ADPCM_IMA_ACORN as u32,
            #[cfg(feature = "ffmpeg_5_0")]
            Id::MSNSIREN => AV_CODEC_ID_MSNSIREN as u32,

            #[cfg(feature = "ffmpeg_5_1")]
            Id::VBN => AV_CODEC_ID_VBN as u32,
            #[cfg(feature = "ffmpeg_5_1")]
            Id::JPEGXL => AV_CODEC_ID_JPEGXL as u32,
            #[cfg(feature = "ffmpeg_5_1")]
            Id::QOI => AV_CODEC_ID_QOI as u32,
            #[cfg(feature = "ffmpeg_5_1")]
            Id::PHM => AV_CODEC_ID_PHM as u32,
            #[cfg(feature = "ffmpeg_5_1")]
            Id::DFPWM => AV_CODEC_ID_DFPWM as u32,

            #[cfg(feature = "ffmpeg_6_0")]
            Id::RADIANCE_HDR => AV_CODEC_ID_RADIANCE_HDR as u32,
            #[cfg(feature = "ffmpeg_6_0")]
            Id::WBMP => AV_CODEC_ID_WBMP as u32,
            #[cfg(feature = "ffmpeg_6_0")]
            Id::MEDIA100 => AV_CODEC_ID_MEDIA100 as u32,
            #[cfg(feature = "ffmpeg_6_0")]
            Id::VQC => AV_CODEC_ID_VQC as u32,
            #[cfg(feature = "ffmpeg_6_0")]
            Id::ADPCM_XMD => AV_CODEC_ID_ADPCM_XMD as u32,
            #[cfg(feature = "ffmpeg_6_0")]
            Id::WADY_DPCM => AV_CODEC_ID_WADY_DPCM as u32,
            #[cfg(feature = "ffmpeg_6_0")]
            Id::CBD2_DPCM => AV_CODEC_ID_CBD2_DPCM as u32,
            #[cfg(feature = "ffmpeg_6_0")]
            Id::BONK => AV_CODEC_ID_BONK as u32,
            #[cfg(feature = "ffmpeg_6_0")]
            Id::MISC4 => AV_CODEC_ID_MISC4 as u32,
            #[cfg(feature = "ffmpeg_6_0")]
            Id::APAC => AV_CODEC_ID_APAC as u32,
            #[cfg(feature = "ffmpeg_6_0")]
            Id::FTR => AV_CODEC_ID_FTR as u32,
            #[cfg(feature = "ffmpeg_6_0")]
            Id::WAVARC => AV_CODEC_ID_WAVARC as u32,
            #[cfg(feature = "ffmpeg_6_0")]
            Id::RKA => AV_CODEC_ID_RKA as u32,
            #[cfg(feature = "ffmpeg_6_0")]
            Id::VNULL => AV_CODEC_ID_VNULL as u32,
            #[cfg(feature = "ffmpeg_6_0")]
            Id::ANULL => AV_CODEC_ID_ANULL as u32,
        }
    }
}

#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum AVCodecID {
    AV_CODEC_ID_NONE = 0,
    AV_CODEC_ID_MPEG1VIDEO = 1,
    AV_CODEC_ID_MPEG2VIDEO = 2,
    AV_CODEC_ID_H261 = 3,
    AV_CODEC_ID_H263 = 4,
    AV_CODEC_ID_RV10 = 5,
    AV_CODEC_ID_RV20 = 6,
    AV_CODEC_ID_MJPEG = 7,
    AV_CODEC_ID_MJPEGB = 8,
    AV_CODEC_ID_LJPEG = 9,
    AV_CODEC_ID_SP5X = 10,
    AV_CODEC_ID_JPEGLS = 11,
    AV_CODEC_ID_MPEG4 = 12,
    AV_CODEC_ID_RAWVIDEO = 13,
    AV_CODEC_ID_MSMPEG4V1 = 14,
    AV_CODEC_ID_MSMPEG4V2 = 15,
    AV_CODEC_ID_MSMPEG4V3 = 16,
    AV_CODEC_ID_WMV1 = 17,
    AV_CODEC_ID_WMV2 = 18,
    AV_CODEC_ID_H263P = 19,
    AV_CODEC_ID_H263I = 20,
    AV_CODEC_ID_FLV1 = 21,
    AV_CODEC_ID_SVQ1 = 22,
    AV_CODEC_ID_SVQ3 = 23,
    AV_CODEC_ID_DVVIDEO = 24,
    AV_CODEC_ID_HUFFYUV = 25,
    AV_CODEC_ID_CYUV = 26,
    AV_CODEC_ID_H264 = 27,
    AV_CODEC_ID_INDEO3 = 28,
    AV_CODEC_ID_VP3 = 29,
    AV_CODEC_ID_THEORA = 30,
    AV_CODEC_ID_ASV1 = 31,
    AV_CODEC_ID_ASV2 = 32,
    AV_CODEC_ID_FFV1 = 33,
    AV_CODEC_ID_4XM = 34,
    AV_CODEC_ID_VCR1 = 35,
    AV_CODEC_ID_CLJR = 36,
    AV_CODEC_ID_MDEC = 37,
    AV_CODEC_ID_ROQ = 38,
    AV_CODEC_ID_INTERPLAY_VIDEO = 39,
    AV_CODEC_ID_XAN_WC3 = 40,
    AV_CODEC_ID_XAN_WC4 = 41,
    AV_CODEC_ID_RPZA = 42,
    AV_CODEC_ID_CINEPAK = 43,
    AV_CODEC_ID_WS_VQA = 44,
    AV_CODEC_ID_MSRLE = 45,
    AV_CODEC_ID_MSVIDEO1 = 46,
    AV_CODEC_ID_IDCIN = 47,
    AV_CODEC_ID_8BPS = 48,
    AV_CODEC_ID_SMC = 49,
    AV_CODEC_ID_FLIC = 50,
    AV_CODEC_ID_TRUEMOTION1 = 51,
    AV_CODEC_ID_VMDVIDEO = 52,
    AV_CODEC_ID_MSZH = 53,
    AV_CODEC_ID_ZLIB = 54,
    AV_CODEC_ID_QTRLE = 55,
    AV_CODEC_ID_TSCC = 56,
    AV_CODEC_ID_ULTI = 57,
    AV_CODEC_ID_QDRAW = 58,
    AV_CODEC_ID_VIXL = 59,
    AV_CODEC_ID_QPEG = 60,
    AV_CODEC_ID_PNG = 61,
    AV_CODEC_ID_PPM = 62,
    AV_CODEC_ID_PBM = 63,
    AV_CODEC_ID_PGM = 64,
    AV_CODEC_ID_PGMYUV = 65,
    AV_CODEC_ID_PAM = 66,
    AV_CODEC_ID_FFVHUFF = 67,
    AV_CODEC_ID_RV30 = 68,
    AV_CODEC_ID_RV40 = 69,
    AV_CODEC_ID_VC1 = 70,
    AV_CODEC_ID_WMV3 = 71,
    AV_CODEC_ID_LOCO = 72,
    AV_CODEC_ID_WNV1 = 73,
    AV_CODEC_ID_AASC = 74,
    AV_CODEC_ID_INDEO2 = 75,
    AV_CODEC_ID_FRAPS = 76,
    AV_CODEC_ID_TRUEMOTION2 = 77,
    AV_CODEC_ID_BMP = 78,
    AV_CODEC_ID_CSCD = 79,
    AV_CODEC_ID_MMVIDEO = 80,
    AV_CODEC_ID_ZMBV = 81,
    AV_CODEC_ID_AVS = 82,
    AV_CODEC_ID_SMACKVIDEO = 83,
    AV_CODEC_ID_NUV = 84,
    AV_CODEC_ID_KMVC = 85,
    AV_CODEC_ID_FLASHSV = 86,
    AV_CODEC_ID_CAVS = 87,
    AV_CODEC_ID_JPEG2000 = 88,
    AV_CODEC_ID_VMNC = 89,
    AV_CODEC_ID_VP5 = 90,
    AV_CODEC_ID_VP6 = 91,
    AV_CODEC_ID_VP6F = 92,
    AV_CODEC_ID_TARGA = 93,
    AV_CODEC_ID_DSICINVIDEO = 94,
    AV_CODEC_ID_TIERTEXSEQVIDEO = 95,
    AV_CODEC_ID_TIFF = 96,
    AV_CODEC_ID_GIF = 97,
    AV_CODEC_ID_DXA = 98,
    AV_CODEC_ID_DNXHD = 99,
    AV_CODEC_ID_THP = 100,
    AV_CODEC_ID_SGI = 101,
    AV_CODEC_ID_C93 = 102,
    AV_CODEC_ID_BETHSOFTVID = 103,
    AV_CODEC_ID_PTX = 104,
    AV_CODEC_ID_TXD = 105,
    AV_CODEC_ID_VP6A = 106,
    AV_CODEC_ID_AMV = 107,
    AV_CODEC_ID_VB = 108,
    AV_CODEC_ID_PCX = 109,
    AV_CODEC_ID_SUNRAST = 110,
    AV_CODEC_ID_INDEO4 = 111,
    AV_CODEC_ID_INDEO5 = 112,
    AV_CODEC_ID_MIMIC = 113,
    AV_CODEC_ID_RL2 = 114,
    AV_CODEC_ID_ESCAPE124 = 115,
    AV_CODEC_ID_DIRAC = 116,
    AV_CODEC_ID_BFI = 117,
    AV_CODEC_ID_CMV = 118,
    AV_CODEC_ID_MOTIONPIXELS = 119,
    AV_CODEC_ID_TGV = 120,
    AV_CODEC_ID_TGQ = 121,
    AV_CODEC_ID_TQI = 122,
    AV_CODEC_ID_AURA = 123,
    AV_CODEC_ID_AURA2 = 124,
    AV_CODEC_ID_V210X = 125,
    AV_CODEC_ID_TMV = 126,
    AV_CODEC_ID_V210 = 127,
    AV_CODEC_ID_DPX = 128,
    AV_CODEC_ID_MAD = 129,
    AV_CODEC_ID_FRWU = 130,
    AV_CODEC_ID_FLASHSV2 = 131,
    AV_CODEC_ID_CDGRAPHICS = 132,
    AV_CODEC_ID_R210 = 133,
    AV_CODEC_ID_ANM = 134,
    AV_CODEC_ID_BINKVIDEO = 135,
    AV_CODEC_ID_IFF_ILBM = 136,
    AV_CODEC_ID_KGV1 = 137,
    AV_CODEC_ID_YOP = 138,
    AV_CODEC_ID_VP8 = 139,
    AV_CODEC_ID_PICTOR = 140,
    AV_CODEC_ID_ANSI = 141,
    AV_CODEC_ID_A64_MULTI = 142,
    AV_CODEC_ID_A64_MULTI5 = 143,
    AV_CODEC_ID_R10K = 144,
    AV_CODEC_ID_MXPEG = 145,
    AV_CODEC_ID_LAGARITH = 146,
    AV_CODEC_ID_PRORES = 147,
    AV_CODEC_ID_JV = 148,
    AV_CODEC_ID_DFA = 149,
    AV_CODEC_ID_WMV3IMAGE = 150,
    AV_CODEC_ID_VC1IMAGE = 151,
    AV_CODEC_ID_UTVIDEO = 152,
    AV_CODEC_ID_BMV_VIDEO = 153,
    AV_CODEC_ID_VBLE = 154,
    AV_CODEC_ID_DXTORY = 155,
    AV_CODEC_ID_V410 = 156,
    AV_CODEC_ID_XWD = 157,
    AV_CODEC_ID_CDXL = 158,
    AV_CODEC_ID_XBM = 159,
    AV_CODEC_ID_ZEROCODEC = 160,
    AV_CODEC_ID_MSS1 = 161,
    AV_CODEC_ID_MSA1 = 162,
    AV_CODEC_ID_TSCC2 = 163,
    AV_CODEC_ID_MTS2 = 164,
    AV_CODEC_ID_CLLC = 165,
    AV_CODEC_ID_MSS2 = 166,
    AV_CODEC_ID_VP9 = 167,
    AV_CODEC_ID_AIC = 168,
    AV_CODEC_ID_ESCAPE130 = 169,
    AV_CODEC_ID_G2M = 170,
    AV_CODEC_ID_WEBP = 171,
    AV_CODEC_ID_HNM4_VIDEO = 172,
    AV_CODEC_ID_HEVC = 173,
    AV_CODEC_ID_FIC = 174,
    AV_CODEC_ID_ALIAS_PIX = 175,
    AV_CODEC_ID_BRENDER_PIX = 176,
    AV_CODEC_ID_PAF_VIDEO = 177,
    AV_CODEC_ID_EXR = 178,
    AV_CODEC_ID_VP7 = 179,
    AV_CODEC_ID_SANM = 180,
    AV_CODEC_ID_SGIRLE = 181,
    AV_CODEC_ID_MVC1 = 182,
    AV_CODEC_ID_MVC2 = 183,
    AV_CODEC_ID_HQX = 184,
    AV_CODEC_ID_TDSC = 185,
    AV_CODEC_ID_HQ_HQA = 186,
    AV_CODEC_ID_HAP = 187,
    AV_CODEC_ID_DDS = 188,
    AV_CODEC_ID_DXV = 189,
    AV_CODEC_ID_SCREENPRESSO = 190,
    AV_CODEC_ID_RSCC = 191,
    AV_CODEC_ID_AVS2 = 192,
    AV_CODEC_ID_PGX = 193,
    AV_CODEC_ID_AVS3 = 194,
    AV_CODEC_ID_MSP2 = 195,
    AV_CODEC_ID_VVC = 196,
    AV_CODEC_ID_Y41P = 197,
    AV_CODEC_ID_AVRP = 198,
    AV_CODEC_ID_012V = 199,
    AV_CODEC_ID_AVUI = 200,
    AV_CODEC_ID_AYUV = 201,
    AV_CODEC_ID_TARGA_Y216 = 202,
    AV_CODEC_ID_V308 = 203,
    AV_CODEC_ID_V408 = 204,
    AV_CODEC_ID_YUV4 = 205,
    AV_CODEC_ID_AVRN = 206,
    AV_CODEC_ID_CPIA = 207,
    AV_CODEC_ID_XFACE = 208,
    AV_CODEC_ID_SNOW = 209,
    AV_CODEC_ID_SMVJPEG = 210,
    AV_CODEC_ID_APNG = 211,
    AV_CODEC_ID_DAALA = 212,
    AV_CODEC_ID_CFHD = 213,
    AV_CODEC_ID_TRUEMOTION2RT = 214,
    AV_CODEC_ID_M101 = 215,
    AV_CODEC_ID_MAGICYUV = 216,
    AV_CODEC_ID_SHEERVIDEO = 217,
    AV_CODEC_ID_YLC = 218,
    AV_CODEC_ID_PSD = 219,
    AV_CODEC_ID_PIXLET = 220,
    AV_CODEC_ID_SPEEDHQ = 221,
    AV_CODEC_ID_FMVC = 222,
    AV_CODEC_ID_SCPR = 223,
    AV_CODEC_ID_CLEARVIDEO = 224,
    AV_CODEC_ID_XPM = 225,
    AV_CODEC_ID_AV1 = 226,
    AV_CODEC_ID_BITPACKED = 227,
    AV_CODEC_ID_MSCC = 228,
    AV_CODEC_ID_SRGC = 229,
    AV_CODEC_ID_SVG = 230,
    AV_CODEC_ID_GDV = 231,
    AV_CODEC_ID_FITS = 232,
    AV_CODEC_ID_IMM4 = 233,
    AV_CODEC_ID_PROSUMER = 234,
    AV_CODEC_ID_MWSC = 235,
    AV_CODEC_ID_WCMV = 236,
    AV_CODEC_ID_RASC = 237,
    AV_CODEC_ID_HYMT = 238,
    AV_CODEC_ID_ARBC = 239,
    AV_CODEC_ID_AGM = 240,
    AV_CODEC_ID_LSCR = 241,
    AV_CODEC_ID_VP4 = 242,
    AV_CODEC_ID_IMM5 = 243,
    AV_CODEC_ID_MVDV = 244,
    AV_CODEC_ID_MVHA = 245,
    AV_CODEC_ID_CDTOONS = 246,
    AV_CODEC_ID_MV30 = 247,
    AV_CODEC_ID_NOTCHLC = 248,
    AV_CODEC_ID_PFM = 249,
    AV_CODEC_ID_MOBICLIP = 250,
    AV_CODEC_ID_PHOTOCD = 251,
    AV_CODEC_ID_IPU = 252,
    AV_CODEC_ID_ARGO = 253,
    AV_CODEC_ID_CRI = 254,
    AV_CODEC_ID_SIMBIOSIS_IMX = 255,
    AV_CODEC_ID_SGA_VIDEO = 256,
    AV_CODEC_ID_GEM = 257,
    AV_CODEC_ID_VBN = 258,
    AV_CODEC_ID_JPEGXL = 259,
    AV_CODEC_ID_QOI = 260,
    AV_CODEC_ID_PHM = 261,
    AV_CODEC_ID_RADIANCE_HDR = 262,
    AV_CODEC_ID_WBMP = 263,
    AV_CODEC_ID_MEDIA100 = 264,
    AV_CODEC_ID_VQC = 265,
    AV_CODEC_ID_PCM_S16LE = 65536,
    AV_CODEC_ID_PCM_S16BE = 65537,
    AV_CODEC_ID_PCM_U16LE = 65538,
    AV_CODEC_ID_PCM_U16BE = 65539,
    AV_CODEC_ID_PCM_S8 = 65540,
    AV_CODEC_ID_PCM_U8 = 65541,
    AV_CODEC_ID_PCM_MULAW = 65542,
    AV_CODEC_ID_PCM_ALAW = 65543,
    AV_CODEC_ID_PCM_S32LE = 65544,
    AV_CODEC_ID_PCM_S32BE = 65545,
    AV_CODEC_ID_PCM_U32LE = 65546,
    AV_CODEC_ID_PCM_U32BE = 65547,
    AV_CODEC_ID_PCM_S24LE = 65548,
    AV_CODEC_ID_PCM_S24BE = 65549,
    AV_CODEC_ID_PCM_U24LE = 65550,
    AV_CODEC_ID_PCM_U24BE = 65551,
    AV_CODEC_ID_PCM_S24DAUD = 65552,
    AV_CODEC_ID_PCM_ZORK = 65553,
    AV_CODEC_ID_PCM_S16LE_PLANAR = 65554,
    AV_CODEC_ID_PCM_DVD = 65555,
    AV_CODEC_ID_PCM_F32BE = 65556,
    AV_CODEC_ID_PCM_F32LE = 65557,
    AV_CODEC_ID_PCM_F64BE = 65558,
    AV_CODEC_ID_PCM_F64LE = 65559,
    AV_CODEC_ID_PCM_BLURAY = 65560,
    AV_CODEC_ID_PCM_LXF = 65561,
    AV_CODEC_ID_S302M = 65562,
    AV_CODEC_ID_PCM_S8_PLANAR = 65563,
    AV_CODEC_ID_PCM_S24LE_PLANAR = 65564,
    AV_CODEC_ID_PCM_S32LE_PLANAR = 65565,
    AV_CODEC_ID_PCM_S16BE_PLANAR = 65566,
    AV_CODEC_ID_PCM_S64LE = 65567,
    AV_CODEC_ID_PCM_S64BE = 65568,
    AV_CODEC_ID_PCM_F16LE = 65569,
    AV_CODEC_ID_PCM_F24LE = 65570,
    AV_CODEC_ID_PCM_VIDC = 65571,
    AV_CODEC_ID_PCM_SGA = 65572,
    AV_CODEC_ID_ADPCM_IMA_QT = 69632,
    AV_CODEC_ID_ADPCM_IMA_WAV = 69633,
    AV_CODEC_ID_ADPCM_IMA_DK3 = 69634,
    AV_CODEC_ID_ADPCM_IMA_DK4 = 69635,
    AV_CODEC_ID_ADPCM_IMA_WS = 69636,
    AV_CODEC_ID_ADPCM_IMA_SMJPEG = 69637,
    AV_CODEC_ID_ADPCM_MS = 69638,
    AV_CODEC_ID_ADPCM_4XM = 69639,
    AV_CODEC_ID_ADPCM_XA = 69640,
    AV_CODEC_ID_ADPCM_ADX = 69641,
    AV_CODEC_ID_ADPCM_EA = 69642,
    AV_CODEC_ID_ADPCM_G726 = 69643,
    AV_CODEC_ID_ADPCM_CT = 69644,
    AV_CODEC_ID_ADPCM_SWF = 69645,
    AV_CODEC_ID_ADPCM_YAMAHA = 69646,
    AV_CODEC_ID_ADPCM_SBPRO_4 = 69647,
    AV_CODEC_ID_ADPCM_SBPRO_3 = 69648,
    AV_CODEC_ID_ADPCM_SBPRO_2 = 69649,
    AV_CODEC_ID_ADPCM_THP = 69650,
    AV_CODEC_ID_ADPCM_IMA_AMV = 69651,
    AV_CODEC_ID_ADPCM_EA_R1 = 69652,
    AV_CODEC_ID_ADPCM_EA_R3 = 69653,
    AV_CODEC_ID_ADPCM_EA_R2 = 69654,
    AV_CODEC_ID_ADPCM_IMA_EA_SEAD = 69655,
    AV_CODEC_ID_ADPCM_IMA_EA_EACS = 69656,
    AV_CODEC_ID_ADPCM_EA_XAS = 69657,
    AV_CODEC_ID_ADPCM_EA_MAXIS_XA = 69658,
    AV_CODEC_ID_ADPCM_IMA_ISS = 69659,
    AV_CODEC_ID_ADPCM_G722 = 69660,
    AV_CODEC_ID_ADPCM_IMA_APC = 69661,
    AV_CODEC_ID_ADPCM_VIMA = 69662,
    AV_CODEC_ID_ADPCM_AFC = 69663,
    AV_CODEC_ID_ADPCM_IMA_OKI = 69664,
    AV_CODEC_ID_ADPCM_DTK = 69665,
    AV_CODEC_ID_ADPCM_IMA_RAD = 69666,
    AV_CODEC_ID_ADPCM_G726LE = 69667,
    AV_CODEC_ID_ADPCM_THP_LE = 69668,
    AV_CODEC_ID_ADPCM_PSX = 69669,
    AV_CODEC_ID_ADPCM_AICA = 69670,
    AV_CODEC_ID_ADPCM_IMA_DAT4 = 69671,
    AV_CODEC_ID_ADPCM_MTAF = 69672,
    AV_CODEC_ID_ADPCM_AGM = 69673,
    AV_CODEC_ID_ADPCM_ARGO = 69674,
    AV_CODEC_ID_ADPCM_IMA_SSI = 69675,
    AV_CODEC_ID_ADPCM_ZORK = 69676,
    AV_CODEC_ID_ADPCM_IMA_APM = 69677,
    AV_CODEC_ID_ADPCM_IMA_ALP = 69678,
    AV_CODEC_ID_ADPCM_IMA_MTF = 69679,
    AV_CODEC_ID_ADPCM_IMA_CUNNING = 69680,
    AV_CODEC_ID_ADPCM_IMA_MOFLEX = 69681,
    AV_CODEC_ID_ADPCM_IMA_ACORN = 69682,
    AV_CODEC_ID_ADPCM_XMD = 69683,
    AV_CODEC_ID_AMR_NB = 73728,
    AV_CODEC_ID_AMR_WB = 73729,
    AV_CODEC_ID_RA_144 = 77824,
    AV_CODEC_ID_RA_288 = 77825,
    AV_CODEC_ID_ROQ_DPCM = 81920,
    AV_CODEC_ID_INTERPLAY_DPCM = 81921,
    AV_CODEC_ID_XAN_DPCM = 81922,
    AV_CODEC_ID_SOL_DPCM = 81923,
    AV_CODEC_ID_SDX2_DPCM = 81924,
    AV_CODEC_ID_GREMLIN_DPCM = 81925,
    AV_CODEC_ID_DERF_DPCM = 81926,
    AV_CODEC_ID_WADY_DPCM = 81927,
    AV_CODEC_ID_CBD2_DPCM = 81928,
    AV_CODEC_ID_MP2 = 86016,
    #[doc = "< preferred ID for decoding MPEG audio layer 1, 2 or 3"]
    AV_CODEC_ID_MP3 = 86017,
    AV_CODEC_ID_AAC = 86018,
    AV_CODEC_ID_AC3 = 86019,
    AV_CODEC_ID_DTS = 86020,
    AV_CODEC_ID_VORBIS = 86021,
    AV_CODEC_ID_DVAUDIO = 86022,
    AV_CODEC_ID_WMAV1 = 86023,
    AV_CODEC_ID_WMAV2 = 86024,
    AV_CODEC_ID_MACE3 = 86025,
    AV_CODEC_ID_MACE6 = 86026,
    AV_CODEC_ID_VMDAUDIO = 86027,
    AV_CODEC_ID_FLAC = 86028,
    AV_CODEC_ID_MP3ADU = 86029,
    AV_CODEC_ID_MP3ON4 = 86030,
    AV_CODEC_ID_SHORTEN = 86031,
    AV_CODEC_ID_ALAC = 86032,
    AV_CODEC_ID_WESTWOOD_SND1 = 86033,
    #[doc = "< as in Berlin toast format"]
    AV_CODEC_ID_GSM = 86034,
    AV_CODEC_ID_QDM2 = 86035,
    AV_CODEC_ID_COOK = 86036,
    AV_CODEC_ID_TRUESPEECH = 86037,
    AV_CODEC_ID_TTA = 86038,
    AV_CODEC_ID_SMACKAUDIO = 86039,
    AV_CODEC_ID_QCELP = 86040,
    AV_CODEC_ID_WAVPACK = 86041,
    AV_CODEC_ID_DSICINAUDIO = 86042,
    AV_CODEC_ID_IMC = 86043,
    AV_CODEC_ID_MUSEPACK7 = 86044,
    AV_CODEC_ID_MLP = 86045,
    AV_CODEC_ID_GSM_MS = 86046,
    AV_CODEC_ID_ATRAC3 = 86047,
    AV_CODEC_ID_APE = 86048,
    AV_CODEC_ID_NELLYMOSER = 86049,
    AV_CODEC_ID_MUSEPACK8 = 86050,
    AV_CODEC_ID_SPEEX = 86051,
    AV_CODEC_ID_WMAVOICE = 86052,
    AV_CODEC_ID_WMAPRO = 86053,
    AV_CODEC_ID_WMALOSSLESS = 86054,
    AV_CODEC_ID_ATRAC3P = 86055,
    AV_CODEC_ID_EAC3 = 86056,
    AV_CODEC_ID_SIPR = 86057,
    AV_CODEC_ID_MP1 = 86058,
    AV_CODEC_ID_TWINVQ = 86059,
    AV_CODEC_ID_TRUEHD = 86060,
    AV_CODEC_ID_MP4ALS = 86061,
    AV_CODEC_ID_ATRAC1 = 86062,
    AV_CODEC_ID_BINKAUDIO_RDFT = 86063,
    AV_CODEC_ID_BINKAUDIO_DCT = 86064,
    AV_CODEC_ID_AAC_LATM = 86065,
    AV_CODEC_ID_QDMC = 86066,
    AV_CODEC_ID_CELT = 86067,
    AV_CODEC_ID_G723_1 = 86068,
    AV_CODEC_ID_G729 = 86069,
    AV_CODEC_ID_8SVX_EXP = 86070,
    AV_CODEC_ID_8SVX_FIB = 86071,
    AV_CODEC_ID_BMV_AUDIO = 86072,
    AV_CODEC_ID_RALF = 86073,
    AV_CODEC_ID_IAC = 86074,
    AV_CODEC_ID_ILBC = 86075,
    AV_CODEC_ID_OPUS = 86076,
    AV_CODEC_ID_COMFORT_NOISE = 86077,
    AV_CODEC_ID_TAK = 86078,
    AV_CODEC_ID_METASOUND = 86079,
    AV_CODEC_ID_PAF_AUDIO = 86080,
    AV_CODEC_ID_ON2AVC = 86081,
    AV_CODEC_ID_DSS_SP = 86082,
    AV_CODEC_ID_CODEC2 = 86083,
    AV_CODEC_ID_FFWAVESYNTH = 86084,
    AV_CODEC_ID_SONIC = 86085,
    AV_CODEC_ID_SONIC_LS = 86086,
    AV_CODEC_ID_EVRC = 86087,
    AV_CODEC_ID_SMV = 86088,
    AV_CODEC_ID_DSD_LSBF = 86089,
    AV_CODEC_ID_DSD_MSBF = 86090,
    AV_CODEC_ID_DSD_LSBF_PLANAR = 86091,
    AV_CODEC_ID_DSD_MSBF_PLANAR = 86092,
    AV_CODEC_ID_4GV = 86093,
    AV_CODEC_ID_INTERPLAY_ACM = 86094,
    AV_CODEC_ID_XMA1 = 86095,
    AV_CODEC_ID_XMA2 = 86096,
    AV_CODEC_ID_DST = 86097,
    AV_CODEC_ID_ATRAC3AL = 86098,
    AV_CODEC_ID_ATRAC3PAL = 86099,
    AV_CODEC_ID_DOLBY_E = 86100,
    AV_CODEC_ID_APTX = 86101,
    AV_CODEC_ID_APTX_HD = 86102,
    AV_CODEC_ID_SBC = 86103,
    AV_CODEC_ID_ATRAC9 = 86104,
    AV_CODEC_ID_HCOM = 86105,
    AV_CODEC_ID_ACELP_KELVIN = 86106,
    AV_CODEC_ID_MPEGH_3D_AUDIO = 86107,
    AV_CODEC_ID_SIREN = 86108,
    AV_CODEC_ID_HCA = 86109,
    AV_CODEC_ID_FASTAUDIO = 86110,
    AV_CODEC_ID_MSNSIREN = 86111,
    AV_CODEC_ID_DFPWM = 86112,
    AV_CODEC_ID_BONK = 86113,
    AV_CODEC_ID_MISC4 = 86114,
    AV_CODEC_ID_APAC = 86115,
    AV_CODEC_ID_FTR = 86116,
    AV_CODEC_ID_WAVARC = 86117,
    AV_CODEC_ID_RKA = 86118,
    AV_CODEC_ID_DVD_SUBTITLE = 94208,
    AV_CODEC_ID_DVB_SUBTITLE = 94209,
    #[doc = "< raw UTF-8 text"]
    AV_CODEC_ID_TEXT = 94210,
    AV_CODEC_ID_XSUB = 94211,
    AV_CODEC_ID_SSA = 94212,
    AV_CODEC_ID_MOV_TEXT = 94213,
    AV_CODEC_ID_HDMV_PGS_SUBTITLE = 94214,
    AV_CODEC_ID_DVB_TELETEXT = 94215,
    AV_CODEC_ID_SRT = 94216,
    AV_CODEC_ID_MICRODVD = 94217,
    AV_CODEC_ID_EIA_608 = 94218,
    AV_CODEC_ID_JACOSUB = 94219,
    AV_CODEC_ID_SAMI = 94220,
    AV_CODEC_ID_REALTEXT = 94221,
    AV_CODEC_ID_STL = 94222,
    AV_CODEC_ID_SUBVIEWER1 = 94223,
    AV_CODEC_ID_SUBVIEWER = 94224,
    AV_CODEC_ID_SUBRIP = 94225,
    AV_CODEC_ID_WEBVTT = 94226,
    AV_CODEC_ID_MPL2 = 94227,
    AV_CODEC_ID_VPLAYER = 94228,
    AV_CODEC_ID_PJS = 94229,
    AV_CODEC_ID_ASS = 94230,
    AV_CODEC_ID_HDMV_TEXT_SUBTITLE = 94231,
    AV_CODEC_ID_TTML = 94232,
    AV_CODEC_ID_ARIB_CAPTION = 94233,
    AV_CODEC_ID_TTF = 98304,
    #[doc = "< Contain timestamp estimated through PCR of program stream."]
    AV_CODEC_ID_SCTE_35 = 98305,
    AV_CODEC_ID_EPG = 98306,
    AV_CODEC_ID_BINTEXT = 98307,
    AV_CODEC_ID_XBIN = 98308,
    AV_CODEC_ID_IDF = 98309,
    AV_CODEC_ID_OTF = 98310,
    AV_CODEC_ID_SMPTE_KLV = 98311,
    AV_CODEC_ID_DVD_NAV = 98312,
    AV_CODEC_ID_TIMED_ID3 = 98313,
    AV_CODEC_ID_BIN_DATA = 98314,
    #[doc = "< codec_id is not known (like AV_CODEC_ID_NONE) but lavf should attempt to identify it"]
    AV_CODEC_ID_PROBE = 102400,
    #[doc = "< _FAKE_ codec to indicate a raw MPEG-2 TS\n stream (only used by libavformat)"]
    AV_CODEC_ID_MPEG2TS = 131072,
    #[doc = "< _FAKE_ codec to indicate a MPEG-4 Systems\n stream (only used by libavformat)"]
    AV_CODEC_ID_MPEG4SYSTEMS = 131073,
    #[doc = "< Dummy codec for streams containing only metadata information."]
    AV_CODEC_ID_FFMETADATA = 135168,
    #[doc = "< Passthrough codec, AVFrames wrapped in AVPacket"]
    AV_CODEC_ID_WRAPPED_AVFRAME = 135169,
    #[doc = " Dummy null video codec, useful mainly for development and debugging.\n Null encoder/decoder discard all input and never return any output."]
    AV_CODEC_ID_VNULL = 135170,
    #[doc = " Dummy null audio codec, useful mainly for development and debugging.\n Null encoder/decoder discard all input and never return any output."]
    AV_CODEC_ID_ANULL = 135171,
}
