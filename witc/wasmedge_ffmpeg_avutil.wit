// error.h
av-strerror: func(errno:s32,buf:list<u8>)-> s32
AVERROR: func(errno:s32)-> s32
AVUNERROR: func(errno:s32)-> s32

// rational.h
av-add-q: func(ANum:s32,ADen:s32,BNum:s32,BDen:s32,CNumPtr:u32,CDenPtr:u32) -> s32
av-sub-q: func(ANum:s32,ADen:s32,BNum:s32,BDen:s32,CNumPtr:u32,CDenPtr:u32) -> s32
av-mul-q: func(ANum:s32,ADen:s32,BNum:s32,BDen:s32,CNumPtr:u32,CDenPtr:u32) -> s32
av-div-q: func(ANum:s32,ADen:s32,BNum:s32,BDen:s32,CNumPtr:u32,CDenPtr:u32) -> s32
av-q2d: func(ANum:s32,ADen:s32) -> f64
av-d2q: func(D:f64,Max:s32,ANumPtr:u32,ADenPtr:u32) -> s32
av-inv-q: func(ANum:s32,ADen:s32,BNumPtr:u32,BDenPtr:u32) -> s32
av-q2intfloat: func(ANum:s32,ADen:s32) -> u32
av-nearer-q: func(ANum:s32,ADen:s32,BNum:s32,BDen:s32,CNum:s32,CDen:s32) -> s32
av-cmp-q: func(ANum:s32,ADen:s32,BNum:s32,BDen:s32) -> s32
av-reduce: func(ANumPtr:u32,ADenPtr:u32,BNum:s64,BDen:s64,Max:s64) -> s32

// frame.h
av-frame-alloc: func(framePtr:u32) -> s32
av-frame-free: func(frameId:u32) -> s32
av-frame-width: func(frameId:u32) -> u32
av-frame-height: func(frameId:u32) -> u32
av-frame-set-width: func(frameId:u32,width:u32) -> unit
av-frame-set-height: func(frameId:u32,height:u32) -> unit
av-frame-video-format: func(frameId:u32) -> s32
av-frame-set-video-format : func(frameId:u32,AvPixFormatId:u32) -> s32
av-frame-isnull : func(avPacketId:u32) -> s32
av-frame-linesize : func(avPacketId:u32,Idx:u32) -> s32
av-frame-data : func(frameId:u32,data:list<u8>,Index:u32) -> s32
av-frame-get-buffer : func(frameId:u32,Align:s32) -> s32
av-frame-audio-format: func(frameId:u32) -> s32
av-frame-set-audio-format: func(frameId:u32,AvSampleFormatId:u32) -> s32
av-frame-set-nb-samples: func(frameId:u32,Samples:s32) -> s32
av-frame-set-channel-layout: func(frameId:u32,ChannelLayoutId:u64) -> s32
av-frame-nb-samples : func(frameId:u32) -> s32
av-frame-sample-rate : func(frameId:u32) -> s32
av-frame-channels : func(frameId:u32) -> s32
av-frame-channel-layout : func(frameId:u32) -> u64

// pixfmt.h
avpixfmtdescriptor-nb-components : func(AvPixFormatId:u32) -> s32
avpixfmtdescriptor-log2-chromah : func(AvPixFormatId:u32) -> s32
avpixfmtdescriptor-log2-chromaw : func(AvPixFormatId:u32) -> s32

// samplefmt.h
av-get-packed-sample-fmt : func(SampleFormatID:u32) -> u32
av-get-planar-sample-fmt : func(SampleFormatID:u32) -> u32
av-sample-fmt-is-planar : func(SampleFormatID:u32) -> u32
av-get-bytes-per-sample : func(SampleFormatID:u32) -> s32
av-get-sample-fmt : func(name:string) -> u32
av-samples-get-buffer-size : func(NbChannels:s32,NbSamples:s32,SampleFormatID:u32,Align:s32) -> s32
av-samples-alloc-array-and-samples : func(BufferPtr:u32,Linesize:s32,NbChannels:s32,NbSamples:s32,SampleFmtId:u32,Align:s32) -> s32
// av-samples-copy : func(DestBufPtr:u32,SrcBufId:u32,DestOffset:s32,SrcOffset:s32,NbSamples:s32,NbChannels:s32,SampleFmtId:u32) -> s32
av-samples-get-buffer : func(BufID:u32,Buf:list<u8>) -> s32
av-freep : func(BufId:u32) -> s32

// channel_layout.h
av-get-channel-layout-nb-channels : func(ChannelLayoutId:u64) -> s32
av-get-default-channel-layout : func(Number:s32) -> u64
