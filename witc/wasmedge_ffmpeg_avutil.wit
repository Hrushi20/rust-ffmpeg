// error.h
av-strerror: func(errno:s32,buf:list<u8>)-> s32
AVERROR: func(errno:s32)-> s32
AVUNERROR: func(errno:s32)-> s32

// rational.h
av-add-q: func(ANum:s32,ADen:s32,BNum:s32,BDen:s32,CNumPtr:u32,CDenPtr:u32) -> s32
av-sub-q: func(ANum:s32,ADen:s32,BNum:s32,BDen:s32,CNumPtr:u32,CDenPtr:u32) -> s32
av-mul-q: func(ANum:s32,ADen:s32,BNum:s32,BDen:s32,CNumPtr:u32,CDenPtr:u32) -> s32
av-div-q: func(ANum:s32,ADen:s32,BNum:s32,BDen:s32,CNumPtr:u32,CDenPtr:u32) -> s32
av-q2d: func(ANum:s32,ADen:s32) -> f64
av-d2q: func(D:f64,Max:s32,ANumPtr:u32,ADenPtr:u32) -> s32
av-inv-q: func(ANum:s32,ADen:s32,BNumPtr:u32,BDenPtr:u32) -> s32
av-q2intfloat: func(ANum:s32,ADen:s32) -> u32
av-nearer-q: func(ANum:s32,ADen:s32,BNum:s32,BDen:s32,CNum:s32,CDen:s32) -> s32
av-cmp-q: func(ANum:s32,ADen:s32,BNum:s32,BDen:s32) -> s32
av-reduce: func(ANumPtr:u32,ADenPtr:u32,BNum:s64,BDen:s64,Max:s64) -> s32

// frame.h
av-frame-alloc: func(framePtr:u32) -> s32
av-frame-free: func(frameId:u32) -> s32
av-frame-width: func(frameId:u32) -> u32
av-frame-height: func(frameId:u32) -> u32
av-frame-set-width: func(frameId:u32,width:u32) -> unit
av-frame-set-height: func(frameId:u32,height:u32) -> unit
av-frame-format: func(frameId:u32) -> u32
av-frame-isnull : func(avPacketId:u32) -> s32
av-frame-linesize : func(avPacketId:u32,Idx:u32) -> s32
av-frame-data : func(frameId:u32,data:list<u8>) -> s32

// pixfunc.h
avpixfmtdescriptor-nb-components : func(AvPixFormatId:u32) -> s32
avpixfmtdescriptor-log2-chromah : func(AvPixFormatId:u32) -> s32
avpixfmtdescriptor-log2-chromaw : func(AvPixFormatId:u32) -> s32

